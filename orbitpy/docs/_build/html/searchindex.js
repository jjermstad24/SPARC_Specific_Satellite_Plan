Search.setIndex({"docnames": ["api_reference", "development", "examples", "generated/orbitpy.constellation.ConstellationFactory", "generated/orbitpy.constellation.TrainConstellation", "generated/orbitpy.constellation.WalkerDeltaConstellation", "generated/orbitpy.contactfinder.ContactFinder", "generated/orbitpy.contactfinder.ContactFinderOutputInfo", "generated/orbitpy.contactfinder.ContactPairs", "generated/orbitpy.coveragecalculator.CoverageCalculatorFactory", "generated/orbitpy.coveragecalculator.GridCoverage", "generated/orbitpy.coveragecalculator.PointingOptionsCoverage", "generated/orbitpy.coveragecalculator.PointingOptionsWithGridCoverage", "generated/orbitpy.coveragecalculator.SpecularCoverage", "generated/orbitpy.coveragecalculator.filter_mid_interval_access", "generated/orbitpy.coveragecalculator.find_in_cov_params_list", "generated/orbitpy.coveragecalculator.helper_extract_coverage_parameters_of_spacecraft", "generated/orbitpy.datametricscalculator.AccessFileInfo", "generated/orbitpy.datametricscalculator.DataMetricsCalculator", "generated/orbitpy.datametricscalculator.DataMetricsOutputInfo", "generated/orbitpy.eclipsefinder.EclipseFinder", "generated/orbitpy.eclipsefinder.EclipseFinderOutputInfo", "generated/orbitpy.grid.Grid", "generated/orbitpy.grid.GridOutputInfo", "generated/orbitpy.grid.GridPoint", "generated/orbitpy.grid.compute_grid_res", "generated/orbitpy.mission.Mission", "generated/orbitpy.mission.Settings", "generated/orbitpy.propagator.J2AnalyticalPropagator", "generated/orbitpy.propagator.PropagatorFactory", "generated/orbitpy.propagator.PropagatorOutputInfo", "generated/orbitpy.propagator.compute_time_step", "generated/orbitpy.util.DateType", "generated/orbitpy.util.GroundStation", "generated/orbitpy.util.OrbitState", "generated/orbitpy.util.OutputInfoUtility", "generated/orbitpy.util.Spacecraft", "generated/orbitpy.util.SpacecraftBus", "generated/orbitpy.util.StateType", "generated/orbitpy.util.add_to_list", "generated/orbitpy.util.dictionary_list_to_object_list", "generated/orbitpy.util.extract_auxillary_info_from_state_file", "generated/orbitpy.util.helper_extract_spacecraft_params", "generated/orbitpy.util.initialize_object_list", "generated/orbitpy.util.object_list_to_dictionary_list", "index", "installation", "miscellaneous", "module_constellation", "module_contactfinder", "module_coveragecalculator", "module_datametricscalculator", "module_eclipsefinder", "module_grid", "module_mission", "module_propagator", "module_sensorpixelprojection", "module_util", "package_overview", "run", "software", "tests", "user_guide", "user_json_desc", "validation"], "filenames": ["api_reference.rst", "development.rst", "examples.rst", "generated/orbitpy.constellation.ConstellationFactory.rst", "generated/orbitpy.constellation.TrainConstellation.rst", "generated/orbitpy.constellation.WalkerDeltaConstellation.rst", "generated/orbitpy.contactfinder.ContactFinder.rst", "generated/orbitpy.contactfinder.ContactFinderOutputInfo.rst", "generated/orbitpy.contactfinder.ContactPairs.rst", "generated/orbitpy.coveragecalculator.CoverageCalculatorFactory.rst", "generated/orbitpy.coveragecalculator.GridCoverage.rst", "generated/orbitpy.coveragecalculator.PointingOptionsCoverage.rst", "generated/orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.rst", "generated/orbitpy.coveragecalculator.SpecularCoverage.rst", "generated/orbitpy.coveragecalculator.filter_mid_interval_access.rst", "generated/orbitpy.coveragecalculator.find_in_cov_params_list.rst", "generated/orbitpy.coveragecalculator.helper_extract_coverage_parameters_of_spacecraft.rst", "generated/orbitpy.datametricscalculator.AccessFileInfo.rst", "generated/orbitpy.datametricscalculator.DataMetricsCalculator.rst", "generated/orbitpy.datametricscalculator.DataMetricsOutputInfo.rst", "generated/orbitpy.eclipsefinder.EclipseFinder.rst", "generated/orbitpy.eclipsefinder.EclipseFinderOutputInfo.rst", "generated/orbitpy.grid.Grid.rst", "generated/orbitpy.grid.GridOutputInfo.rst", "generated/orbitpy.grid.GridPoint.rst", "generated/orbitpy.grid.compute_grid_res.rst", "generated/orbitpy.mission.Mission.rst", "generated/orbitpy.mission.Settings.rst", "generated/orbitpy.propagator.J2AnalyticalPropagator.rst", "generated/orbitpy.propagator.PropagatorFactory.rst", "generated/orbitpy.propagator.PropagatorOutputInfo.rst", "generated/orbitpy.propagator.compute_time_step.rst", "generated/orbitpy.util.DateType.rst", "generated/orbitpy.util.GroundStation.rst", "generated/orbitpy.util.OrbitState.rst", "generated/orbitpy.util.OutputInfoUtility.rst", "generated/orbitpy.util.Spacecraft.rst", "generated/orbitpy.util.SpacecraftBus.rst", "generated/orbitpy.util.StateType.rst", "generated/orbitpy.util.add_to_list.rst", "generated/orbitpy.util.dictionary_list_to_object_list.rst", "generated/orbitpy.util.extract_auxillary_info_from_state_file.rst", "generated/orbitpy.util.helper_extract_spacecraft_params.rst", "generated/orbitpy.util.initialize_object_list.rst", "generated/orbitpy.util.object_list_to_dictionary_list.rst", "index.rst", "installation.rst", "miscellaneous.rst", "module_constellation.rst", "module_contactfinder.rst", "module_coveragecalculator.rst", "module_datametricscalculator.rst", "module_eclipsefinder.rst", "module_grid.rst", "module_mission.rst", "module_propagator.rst", "module_sensorpixelprojection.rst", "module_util.rst", "package_overview.rst", "run.rst", "software.rst", "tests.rst", "user_guide.rst", "user_json_desc.rst", "validation.rst"], "titles": ["API Reference", "Development", "Examples", "ConstellationFactory", "TrainConstellation", "WalkerDeltaConstellation", "ContactFinder", "ContactFinderOutputInfo", "ContactPairs", "CoverageCalculatorFactory", "GridCoverage", "PointingOptionsCoverage", "PointingOptionsWithGridCoverage", "SpecularCoverage", "filter_mid_interval_access", "find_in_cov_params_list", "helper_extract_coverage_parameters_of_spacecraft", "AccessFileInfo", "DataMetricsCalculator", "DataMetricsOutputInfo", "EclipseFinder", "EclipseFinderOutputInfo", "Grid", "GridOutputInfo", "GridPoint", "compute_grid_res", "Mission", "Settings", "J2AnalyticalPropagator", "PropagatorFactory", "PropagatorOutputInfo", "compute_time_step", "DateType", "GroundStation", "OrbitState", "OutputInfoUtility", "Spacecraft", "SpacecraftBus", "StateType", "add_to_list", "dictionary_list_to_object_list", "extract_auxillary_info_from_state_file", "helper_extract_spacecraft_params", "initialize_object_list", "object_list_to_dictionary_list", "Welcome to OrbitPy\u2019s documentation!", "Installation", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.constellation</span></code> \u2014 Constellation Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.contactfinder</span></code> \u2014 Contact Finder Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbitpy.coveragecalculator</span></code> \u2014 Coverage Calculator", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbitpy.datametricscalculator</span></code> \u2014 Data Metrics Calculator Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.eclipsefinder</span></code> \u2014 Eclipse Finder Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.grid</span></code> \u2014 Grid Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.mission</span></code> \u2014 Mission Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.propagator</span></code> \u2014 Propagator Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbit.sensorpixelprojection</span></code> \u2014 Sensor Pixel Projection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">orbitpy.util</span></code> \u2014 Util Module", "Package Overview", "Run", "Software", "Tests", "User Guide", "User JSON Input Description", "Validation"], "terms": {"write": [0, 22, 28, 53], "about": [0, 7, 10, 12, 13, 14, 19, 21, 23, 30, 31, 49, 50, 51, 52, 53, 55, 57, 59], "common": [0, 26, 47, 54, 61], "object": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61], "structur": [0, 2, 54], "us": [0, 2, 10, 12, 13, 14, 18, 22, 25, 26, 27, 28, 31, 34, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 61, 63, 64], "from_dict": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59], "to_dict": [0, 4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 44, 48, 50, 55, 57, 59], "outputinfo": [0, 26, 54], "etc": [0, 13, 26, 53, 54, 55, 59], "pleas": [0, 2, 10, 12, 13, 22, 35, 45, 46, 50, 53, 54, 55, 57, 58, 59, 63, 64], "navig": 0, "below": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 18, 22, 26, 27, 28, 29, 46, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 64], "detail": [0, 2, 10, 12, 13, 45, 50, 55, 59, 64], "descript": [0, 2, 6, 14, 20, 22, 26, 34, 35, 58, 59, 61], "orbitpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 61, 64], "": [0, 10, 13, 15, 16, 26, 28, 34, 35, 36, 46, 49, 50, 51, 52, 54, 55, 58, 61, 63, 64], "class": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 64], "function": [0, 2, 3, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 24, 26, 29, 35, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 61, 64], "orbit": [0, 2, 3, 5, 6, 10, 11, 12, 13, 18, 20, 26, 28, 30, 31, 34, 36, 45, 46, 47, 50, 51, 57, 58, 59, 61, 63, 64], "constel": [0, 3, 4, 5, 26, 45, 50, 55, 58, 61], "modul": [0, 2, 18, 26, 45, 50, 58, 59, 64], "propag": [0, 2, 6, 10, 11, 12, 13, 14, 18, 20, 26, 27, 28, 29, 30, 31, 35, 41, 45, 46, 47, 49, 50, 51, 52, 58, 59, 61], "grid": [0, 2, 10, 12, 13, 14, 18, 23, 24, 25, 26, 27, 31, 35, 42, 45, 47, 51, 55, 58, 59, 61, 64], "coveragecalcul": [0, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 35, 45, 51, 61], "coverag": [0, 2, 9, 14, 15, 16, 18, 25, 26, 27, 35, 45, 46, 47, 51, 53, 54, 58, 59, 61], "calcul": [0, 2, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 26, 27, 31, 45, 46, 47, 54, 55, 58, 59, 61, 63, 64], "contactfind": [0, 7, 8, 26, 35, 45, 52, 61], "contact": [0, 2, 7, 26, 45, 54, 58, 59, 61], "finder": [0, 6, 7, 9, 21, 45, 54, 61], "eclipsefind": [0, 21, 35, 45], "eclips": [0, 2, 21, 26, 45, 54, 58, 59, 61], "datametricscalcul": [0, 17, 19, 35, 45, 61], "data": [0, 2, 7, 14, 17, 19, 21, 23, 26, 27, 45, 47, 53, 54, 58, 59, 61, 64], "metric": [0, 2, 19, 45, 50, 54, 58, 59, 61, 64], "mission": [0, 5, 6, 8, 10, 11, 12, 13, 18, 20, 25, 27, 28, 31, 42, 45, 47, 48, 49, 50, 51, 52, 55, 58, 61, 63, 64], "sensorpixelproject": [0, 45], "sensor": [0, 2, 10, 11, 12, 13, 18, 19, 25, 26, 27, 31, 36, 42, 45, 46, 47, 50, 51, 53, 54, 55, 57, 58, 59, 61, 63, 64], "pixel": [0, 45, 46, 58], "project": [0, 2, 45, 46, 58, 64], "util": [0, 5, 6, 8, 10, 11, 12, 13, 15, 16, 18, 20, 25, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61], "thi": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "page": [1, 45, 47, 49, 52, 61, 64], "maintain": [1, 34, 57], "summari": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "record": 1, "packag": [1, 14, 18, 45, 46, 47, 49, 50, 51, 52, 57, 59, 61, 62], "test": [1, 18, 45, 46, 59], "valid": [1, 3, 9, 11, 18, 26, 29, 43, 45, 47, 54, 55, 59, 61], "softwar": [1, 28, 45, 55, 58, 61, 64], "As": [2, 54, 64], "describ": [2, 10, 12, 13, 14, 22, 47, 49, 50, 52, 53, 54, 59, 63, 64], "run": [2, 45, 46, 49, 50, 52, 54, 61, 62, 64], "section": [2, 5, 45, 48, 54, 64], "can": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 64], "access": [2, 6, 10, 11, 12, 13, 14, 17, 18, 19, 26, 27, 31, 47, 49, 51, 53, 54, 55, 58, 59, 61, 64], "either": [2, 6, 26, 34, 52, 53, 54, 55, 61, 63], "invok": [2, 3, 9, 18, 29, 49, 51, 52, 59], "bin": [2, 59], "run_miss": [2, 59], "py": [2, 54, 59, 64], "script": [2, 64], "json": [2, 4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 45, 61], "file": [2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 18, 19, 21, 23, 26, 27, 28, 30, 33, 34, 36, 37, 41, 46, 47, 54, 58, 61, 64], "specif": [2, 3, 5, 9, 10, 11, 12, 13, 18, 22, 26, 27, 28, 29, 36, 37, 50, 51, 57, 58, 61, 63, 64], "import": [2, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 64], "python": [2, 3, 5, 7, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 46, 48, 54, 57, 64], "configur": [2, 37, 39, 59, 61], "simul": [2, 45, 58, 61, 64], "situat": [2, 50], "ar": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36, 39, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "avail": [2, 6, 10, 11, 12, 13, 18, 20, 26, 46, 50, 51, 54, 58, 64], "folder": [2, 26, 46, 54, 58, 59, 61], "which": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "illustr": [2, 53, 55, 64], "both": [2, 6, 7, 26, 49, 54, 55, 61, 64], "approach": [2, 47, 63], "The": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "briefli": 2, "simple_mission_1": 2, "i": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "base": [2, 10, 12, 13, 26, 31, 36, 50, 51, 52, 55, 57, 63, 64], "It": [2, 10, 12, 13, 46, 47, 54, 57, 58, 59, 63, 64], "ha": [2, 3, 9, 10, 12, 13, 18, 29, 35, 45, 47, 50, 55, 61, 63, 64], "been": [2, 3, 9, 10, 12, 13, 29, 45, 50, 55, 64], "execut": [2, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 21, 26, 28, 30, 49, 52, 54, 55, 61], "missionspec": [2, 59], "planet_skysat": 2, "from": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "repo": [2, 46, 59], "directori": [2, 6, 20, 26, 27, 46, 49, 52, 54, 59, 63], "command": [2, 59, 61], "c1": 2, "c6": 2, "21": [2, 22, 50, 61, 63, 64], "model": [2, 3, 48, 54, 55, 57], "along": [2, 13, 14, 26, 27, 31, 42, 47, 51, 54, 55, 61, 64], "optic": [2, 26, 27, 54, 57, 61], "instrument": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 26, 27, 35, 36, 42, 47, 51, 53, 54, 55, 57, 58, 59, 61, 63], "matrix": [2, 47, 63], "imag": [2, 13, 47], "spectral": 2, "inform": [2, 7, 14, 19, 21, 23, 30, 41, 45, 46, 49, 50, 51, 52, 59], "blue": 2, "band": 2, "see": [2, 3, 5, 13, 14, 18, 22, 25, 26, 27, 28, 35, 36, 39, 46, 47, 49, 50, 52, 54, 55, 57, 59, 63], "instrupi": [2, 14, 15, 16, 18, 26, 36, 37, 46, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63], "repositori": 2, "refer": [2, 5, 6, 10, 11, 12, 13, 14, 18, 20, 22, 26, 28, 34, 37, 45, 50, 51, 53, 54, 55, 57, 58, 59, 61, 63, 64], "wa": [2, 19, 30, 61, 64], "built": [2, 3, 14, 48, 50, 54, 55, 58], "passive_scanner_model": 2, "skysat_camera": 2, "3": [2, 5, 18, 46, 47, 48, 49, 50, 51, 54, 57, 61, 63, 64], "adjac": 2, "cmo": 2, "chip": 2, "A": [2, 5, 7, 10, 11, 12, 13, 22, 25, 26, 28, 47, 49, 50, 51, 52, 53, 54, 63, 64], "scene": [2, 10, 12, 14, 16, 25, 26, 47, 50, 53, 61], "size": [2, 6, 10, 11, 12, 13, 14, 18, 20, 26, 27, 28, 41, 47, 49, 50, 51, 52, 54, 55, 61, 64], "9": [2, 22, 25, 27, 49, 50, 51, 52, 53, 54, 63, 64], "25kmx6": 2, "6km": 2, "consid": [2, 7, 10, 11, 12, 13, 18, 19, 21, 23, 30, 31, 47, 50, 55, 64], "maneuv": [2, 50, 53, 54, 55, 57, 59, 61], "satellit": [2, 5, 6, 7, 11, 12, 13, 18, 25, 26, 27, 28, 33, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 64], "28": [2, 49, 52, 54, 57, 61, 64], "roll": [2, 61], "angl": [2, 6, 14, 25, 26, 31, 33, 49, 50, 51, 53, 54, 55, 57, 61, 64], "set": [2, 11, 12, 13, 22, 25, 26, 28, 50, 51, 53, 55, 58, 59, 61, 63, 64], "point": [2, 10, 11, 12, 13, 14, 15, 18, 22, 24, 25, 26, 31, 47, 51, 53, 54, 55, 57, 58, 59, 61, 63, 64], "option": [2, 11, 12, 15, 18, 26, 47, 51, 54, 58, 59, 61, 63, 64], "each": [2, 8, 10, 11, 12, 13, 18, 40, 43, 47, 49, 50, 51, 52, 54, 59, 61, 63, 64], "place": [2, 6, 7, 14, 26, 27, 50, 54, 57], "under": [2, 58, 63], "separ": [2, 46, 50, 59, 61, 63], "mode": [2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 35, 42, 50, 51, 54, 61], "chosen": [2, 49, 50, 52, 53, 55, 61], "so": [2, 13, 50, 51, 64], "correspond": [2, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 26, 28, 31, 36, 40, 42, 49, 50, 51, 54, 55, 59, 61, 63, 64], "swath": [2, 47], "other": [2, 3, 7, 18, 19, 21, 22, 23, 30, 35, 48, 51, 58, 61, 64], "thei": [2, 18, 39, 59, 64], "cover": [2, 31, 55, 61, 64], "span": [2, 64], "10deg": 2, "type": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 63], "implement": [2, 10, 12, 13, 46, 47, 64], "At": [2, 49, 52, 61], "time": [2, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30, 31, 36, 42, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "step": [2, 6, 10, 11, 12, 13, 14, 18, 20, 26, 27, 28, 31, 41, 42, 46, 47, 49, 50, 51, 52, 54, 55, 59, 61, 63, 64], "lat": [2, 10, 11, 12, 13, 14, 18, 22, 50, 51, 53, 54, 57, 59, 64], "lon": [2, 10, 11, 12, 13, 14, 18, 22, 50, 51, 53, 54, 57, 59, 64], "coordin": [2, 11, 13, 22, 23, 33, 53, 54, 57, 59, 63, 64], "ground": [2, 6, 7, 11, 14, 26, 33, 47, 49, 50, 54, 57, 58, 59, 61, 64], "intersect": [2, 11, 58, 61], "axi": [2, 28, 34, 42, 47, 54, 55, 57, 58, 63, 64], "earth": [2, 13, 25, 28, 34, 45, 49, 52, 53, 55, 57, 58, 59, 61, 64], "surfac": [2, 10, 12, 13, 58, 64], "output": [2, 6, 7, 10, 11, 12, 13, 14, 18, 20, 21, 22, 26, 27, 28, 35, 47, 53, 59, 61, 63, 64], "follow": [2, 5, 6, 9, 10, 11, 12, 13, 18, 20, 22, 23, 26, 27, 28, 33, 34, 36, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 63, 64], "comm": [2, 47, 54, 59], "intersatellit": [2, 26, 47, 54], "period": [2, 10, 11, 12, 13, 26, 50, 54, 59, 61, 64], "sat0": [2, 54, 59], "access_instru0_mode0": 2, "csv": [2, 6, 18, 20, 22, 28, 49, 50, 51, 52, 53, 54, 55, 59, 63], "event": [2, 18, 51, 61], "0": [2, 3, 5, 6, 7, 11, 12, 22, 25, 26, 27, 31, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64], "e": [2, 6, 10, 13, 14, 17, 18, 22, 26, 34, 35, 48, 49, 50, 52, 53, 54, 55, 57, 63, 64], "deg": [2, 6, 10, 11, 12, 13, 14, 18, 22, 25, 26, 28, 33, 49, 50, 51, 53, 54, 55, 57, 61, 64], "access_instru0_mode1": 2, "access_instru0_mode2": 2, "datametrics_instru0_mode0": 2, "datametrics_instru0_mode1": 2, "datametrics_instru0_mode2": 2, "state_cartesian": [2, 54, 59], "cartesian": [2, 8, 11, 13, 30, 34, 55, 57, 59, 64], "state_keplerian": [2, 54, 59], "keplerian": [2, 5, 26, 30, 34, 48, 55, 57, 59, 61, 63, 64], "sat1": [2, 54], "c2": 2, "sat2": [2, 54], "c3": 2, "sat3": [2, 54], "c4": 2, "sat4": [2, 54], "c5": 2, "sat5": [2, 54], "sar_constel": 2, "develop": [2, 45], "dshield": [2, 47], "relev": [2, 6, 7, 10, 12, 13, 16, 26, 27, 49, 50, 51, 54], "librari": [2, 46], "carri": [2, 7, 13, 14, 21, 30, 46, 50, 51], "l": [2, 13], "p": [2, 45, 54], "done": [2, 7, 18, 19, 21, 23, 26, 27, 30, 51, 54, 61, 64], "differ": [2, 5, 6, 8, 18, 25, 34, 35, 47, 49, 50, 52, 53, 54, 55, 57, 58, 61, 63, 64], "sinc": [2, 13, 49, 50, 52, 55, 61, 63, 64], "consist": [2, 13, 46, 48, 54], "more": [2, 10, 12, 13, 26, 28, 55, 63, 64], "5": [2, 5, 22, 25, 46, 47, 48, 50, 51, 53, 54, 55, 57, 59, 61, 63, 64], "million": 2, "coupl": [2, 14, 50], "requir": [2, 13, 14, 31, 33, 35, 46, 47, 49, 50, 52, 54, 63], "second": [2, 6, 10, 11, 12, 13, 18, 20, 28, 31, 34, 41, 47, 49, 50, 51, 52, 54, 55, 57, 59, 63, 64], "result": [2, 6, 7, 11, 13, 14, 19, 20, 21, 26, 30, 31, 49, 50, 51, 52, 54, 55, 59, 61], "comput": [2, 6, 10, 12, 13, 14, 18, 25, 26, 28, 31, 42, 49, 50, 52, 53, 55, 58, 59, 61, 63], "load": [2, 53], "runtim": [2, 10, 12, 13], "huge": 2, "were": [2, 6, 7, 20, 21, 49, 52, 64], "oper": [2, 14, 22, 26, 46, 50, 53], "fix": [2, 61], "impli": [2, 31, 55], "irrespect": [2, 61], "illumin": 2, "determin": [2, 14, 49, 50, 52, 63], "cross": [2, 42], "track": [2, 14, 26, 27, 31, 42, 47, 54, 55, 61, 64], "fov": [2, 10, 12, 13, 14, 25, 26, 27, 31, 42, 47, 53, 54, 55, 58, 59, 61], "here": [2, 25, 31, 50, 53, 64], "antenna": 2, "beamwidth": 2, "process": [2, 5, 10, 12, 13, 47, 51], "henc": [2, 13, 47, 53, 55, 64], "would": [2, 14, 31, 47, 50, 55, 64], "have": [2, 18, 26, 27, 40, 44, 46, 47, 50, 52, 53, 54, 61, 63, 64], "yield": [2, 10, 12, 13, 61], "erron": [2, 14, 50], "For": [2, 10, 12, 13, 15, 25, 28, 47, 50, 53, 54, 55, 61, 64], "dshield_miss": 2, "landsat_seahawk_1": 2, "landsat_seahawk_2": 2, "same": [2, 6, 10, 11, 12, 13, 14, 22, 26, 47, 48, 49, 50, 52, 54, 55, 61], "first": [2, 6, 10, 11, 12, 13, 15, 18, 20, 22, 28, 36, 45, 47, 49, 50, 51, 52, 55, 64], "contain": [2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 18, 20, 22, 27, 28, 29, 49, 50, 51, 52, 53, 55, 58, 59, 63, 64], "In": [2, 8, 10, 12, 13, 14, 26, 31, 34, 46, 47, 49, 50, 51, 53, 54, 55, 59, 61, 63, 64], "landsat_seahawk": 2, "method": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 48, 49, 50, 52, 54, 55, 59, 61, 64], "produc": [2, 26, 30, 55, 61, 64], "datametr": [2, 18, 26, 51, 54, 59, 61], "commun": [2, 6, 7, 26, 27, 33, 54, 57, 58], "onli": [2, 6, 7, 10, 12, 13, 14, 16, 19, 21, 23, 26, 27, 30, 31, 35, 47, 48, 49, 50, 54, 55, 61, 63, 64], "orient": [2, 11, 12, 15, 16, 31, 36, 37, 50, 51, 54, 55, 58, 59, 61, 64], "tir": 2, "oli": 2, "hawkey": 2, "over": [2, 10, 11, 12, 13, 18, 19, 31, 50, 54, 55, 58, 59, 64], "durat": [2, 6, 7, 10, 11, 12, 13, 14, 18, 19, 21, 26, 28, 30, 41, 49, 50, 51, 52, 54, 55, 59, 61, 63], "narrow": [2, 14, 26, 27, 47, 54, 61], "direct": [2, 11, 42, 58, 61], "need": [2, 13, 14, 22, 39, 47, 50, 53, 63], "veri": [2, 14, 50, 64], "small": [2, 14, 50, 64], "scenefov": [2, 10, 12, 13, 14, 26, 27, 42, 50, 54], "defin": [2, 3, 5, 9, 25, 26, 27, 29, 33, 34, 36, 37, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 61, 63], "larger": [2, 25, 53, 61, 64], "dimens": [2, 13, 25, 28, 50, 53, 55], "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 58, 59, 61, 64], "factori": [3, 5, 9, 29, 48, 49, 50, 52, 55, 59], "allow": [3, 9, 10, 12, 13, 25, 29, 48, 53, 57, 61, 63], "regist": [3, 9, 29, 48, 50], "appropri": [3, 9, 29, 53, 54, 55, 59], "http": [3, 11, 13, 45, 48], "realpython": [3, 48], "com": [3, 13, 45, 48], "support": [3, 31, 48, 55, 63], "addit": [3, 9, 29, 48, 55, 58, 63, 64], "format": [3, 4, 5, 7, 10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 48, 54, 61, 63, 64], "walkerdeltaconstel": [3, 48], "trainconstel": 3, "user": [3, 9, 29, 45, 46, 48, 50, 53, 54, 55, 57, 58, 59], "shown": [3, 9, 10, 12, 13, 26, 29, 47, 50, 64], "usag": [3, 5, 9, 26, 29, 59, 61], "initi": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37, 48, 50, 51, 54, 55, 57, 59, 64], "spec": [3, 5, 9, 29, 48, 55, 59], "walker": [3, 5, 48, 54, 61, 63], "delta": [3, 5, 48, 54, 61, 63], "date": [3, 5, 7, 19, 21, 26, 28, 30, 34, 41, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 63], "julian_date_ut1": [3, 5, 32, 34, 48, 53, 54, 55, 57, 59], "jd": [3, 5, 34, 48, 53, 54, 55, 57, 59], "2459270": [3, 5, 48, 53, 54, 55, 57, 59], "75": [3, 5, 48, 50, 53, 54, 55, 57, 59, 63, 64], "numbersatellit": [3, 5, 48, 54, 63], "2": [3, 5, 18, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "numberplan": [3, 5, 48, 54, 63], "1": [3, 5, 10, 11, 12, 13, 18, 22, 26, 28, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64], "relativespac": [3, 5, 48, 54, 63], "alt": [3, 5, 48, 54, 63], "500": [3, 5, 48, 50, 51, 61], "ecc": [3, 5, 26, 28, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 64], "001": [3, 5, 48, 50, 51, 53, 54, 55, 57, 59], "inc": [3, 5, 26, 28, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 64], "45": [3, 5, 22, 47, 48, 49, 50, 53, 54, 57, 59, 61, 63, 64], "aop": [3, 5, 26, 28, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 64], "135": [3, 5, 48, 50, 54], "id": [3, 5, 10, 11, 12, 13, 15, 16, 18, 22, 23, 26, 27, 28, 33, 36, 42, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63], "abc": [3, 5, 48, 54], "wd_model": [3, 5, 48], "get_constellation_model": [3, 5, 48], "custom": [3, 9, 22, 29, 48, 53, 55, 61, 63], "newconstellation2021": [3, 48], "def": [3, 48], "__init__": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 48], "self": [3, 48], "staticmethod": [3, 34, 48, 57], "d": [3, 4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 40, 48], "return": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 61], "get": [3, 9, 14, 22, 26, 29, 33, 34, 36, 45, 48, 50, 53, 57], "__eq__": [3, 48, 50, 55], "isinst": [3, 48], "__class__": [3, 48], "els": [3, 11, 13, 43, 48, 50], "notimpl": [3, 48], "generate_orbit": [3, 4, 5, 48], "propcov": [3, 5, 10, 12, 13, 22, 28, 34, 46, 48, 50, 57, 58], "absoluted": [3, 5, 28, 34, 48, 50, 57], "state_dict": [3, 48], "keplerian_earth_centered_inerti": [3, 34, 38, 48, 49, 50, 51, 52, 53, 54, 57, 59], "sma": [3, 26, 28, 31, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 64], "6378": [3, 48, 50, 51, 53, 55], "raan": [3, 26, 28, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64], "ta": [3, 26, 28, 34, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64], "state": [3, 5, 6, 7, 8, 10, 11, 12, 13, 18, 20, 21, 26, 30, 34, 36, 41, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 64], "orbitst": [3, 5, 36, 48, 49, 50, 51, 52, 53, 55, 59], "state_from_dict": [3, 34, 48], "append": [3, 48], "register_constellation_model": [3, 48], "new": [3, 18, 26, 36, 48, 51], "2021": [3, 48, 49, 52, 54, 57, 58, 59, 61], "700": [3, 48, 50, 53, 54, 55, 63], "const1": [3, 48], "variabl": [3, 5, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 50, 53, 61, 64], "_creator": [3, 9, 29], "dict": [3, 5, 7, 9, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37, 40, 44, 54, 57], "dictionari": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37, 40, 44, 57, 59], "map": [3, 9, 29, 54], "label": [3, 9, 29, 48], "document": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 46, 50, 54, 57, 59, 63, 64], "instanc": [3, 5, 7, 9, 10, 13, 18, 19, 21, 22, 23, 26, 28, 29, 30, 35, 39, 49, 50, 52, 53], "also": [3, 9, 10, 12, 13, 26, 29, 34, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 64], "kei": [3, 5, 9, 10, 11, 12, 13, 18, 22, 23, 26, 27, 28, 29, 33, 34, 36, 50, 54, 59, 63], "input": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 26, 28, 29, 31, 34, 35, 36, 39, 42, 43, 47, 49, 50, 51, 52, 54, 61], "_type": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37], "creator": [3, 9, 29], "str": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 33, 34, 36, 37, 41, 42, 50, 54, 63], "tbd": 4, "an": [4, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64], "entiti": [4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 49, 54, 57], "paramet": [4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 50, 54, 61], "_id": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 48], "default": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 49, 50, 53, 54, 55, 57, 59, 61, 63, 64], "none": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 42, 43, 49, 50, 51, 52, 53, 54, 55, 59], "static": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 35, 36, 37, 49, 52], "pars": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "normal": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30], "classmethod": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 61], "from_json": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 50, 51, 53, 54, 55, 57, 59], "json_doc": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "string": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 54, 59, 61], "convert": [4, 6, 20, 34, 40, 44, 57, 59, 64], "to_json": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "arg": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "kwarg": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 35, 36, 37], "serial": [4, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "complet": [5, 14, 50, 59, 63], "character": 5, "space": [5, 25, 45, 48, 53, 54, 63], "analysi": [5, 48], "design": [5, 48, 58, 64], "3rd": [5, 25, 48, 54, 63], "ed": [5, 25, 48, 52, 54, 61, 63], "7": [5, 33, 48, 49, 50, 51, 54, 57, 63, 64], "6": [5, 48, 50, 54, 57, 59, 64], "pg": [5, 25, 48, 54, 61, 63], "194": [5, 48, 54, 63], "195": [5, 48, 53, 61], "julian": [5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 26, 28, 30, 34, 41, 49, 50, 51, 52, 54, 55, 57], "ut1": [5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 26, 28, 30, 34, 41, 49, 50, 51, 52, 54, 55, 57, 63], "int": [5, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 30, 33, 34, 36, 42, 49, 50, 51, 52, 54, 55, 63], "number": [5, 22, 53, 54, 57, 61, 63, 64], "plane": [5, 6, 10, 12, 13, 33, 49, 52, 54, 57, 63], "factor": [5, 25, 26, 27, 31, 53, 54, 55, 59, 63, 64], "control": [5, 54, 63], "between": [5, 6, 7, 10, 12, 13, 20, 25, 26, 27, 49, 50, 52, 53, 54, 63, 64], "float": [5, 6, 7, 10, 11, 12, 13, 18, 19, 21, 22, 25, 26, 27, 28, 30, 31, 33, 34, 37, 41, 42, 49, 50, 51, 54, 55, 61, 63, 64], "altitud": [5, 25, 33, 48, 53, 54, 57, 61, 63], "kilomet": [5, 6, 7, 13, 26, 27, 33, 34, 49, 53, 54, 55, 63], "eccentr": [5, 28, 34, 54, 55, 63, 64], "inclin": [5, 28, 34, 54, 55, 63, 64], "degre": [5, 6, 10, 11, 12, 13, 18, 22, 24, 25, 28, 33, 34, 49, 50, 51, 53, 54, 55, 57, 61, 63, 64], "argument": [5, 6, 13, 14, 22, 28, 34, 35, 50, 54, 55, 59, 63], "perige": [5, 28, 34, 54, 55, 63], "uniqu": [5, 7, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 54, 57, 59, 63], "identifi": [5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 33, 34, 35, 36, 37, 49, 50, 51, 52, 54, 57, 59, 63], "constellationfactori": [5, 48], "print": [5, 48, 53, 54, 55, 57, 59], "2451545": 5, "cartesian_earth_centered_inerti": [5, 6, 10, 11, 12, 13, 18, 20, 34, 38, 48, 49, 50, 52, 54, 57], "x": [5, 25, 28, 34, 48, 50, 53, 54, 55, 57, 61, 63, 64], "7078": [5, 50, 63], "y": [5, 28, 34, 48, 54, 55, 57, 63, 64], "z": [5, 28, 34, 48, 54, 55, 57, 64], "vx": [5, 28, 34, 48, 54, 55, 57], "vy": [5, 28, 34, 48, 54, 55, 57], "504359112788965": 5, "vz": [5, 28, 34, 48, 54, 55, 57], "date_from_dict": [5, 34, 48, 55, 57], "specifi": [5, 6, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 26, 28, 36, 37, 42, 49, 50, 52, 53, 54, 55, 57, 58, 63, 64], "2415019": 5, "jdut1": [5, 10, 11, 12, 13, 18, 28, 49, 50, 51, 52, 55], "random": [5, 22, 28, 33, 36, 54, 57, 61, 64], "98": [5, 47, 49, 53, 55, 64], "22": [5, 22, 50, 59, 61, 63, 64], "gener": [5, 14, 24, 25, 26, 27, 47, 48, 50, 53, 54, 58, 59, 63, 64], "list": [5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 26, 31, 34, 35, 36, 39, 40, 42, 43, 44, 50, 51, 53, 54, 55, 57, 61, 63, 64], "respect": [5, 34, 35, 37, 47, 48, 49, 50, 53, 54, 55, 57, 58], "element": [5, 26, 34, 43, 48, 55, 61, 63, 64], "translat": [5, 7, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "reconstruct": [5, 7, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37], "back": [5, 7, 10, 11, 12, 13, 18, 19, 21, 22, 23, 26, 27, 28, 30, 33, 34, 36, 37, 59], "entitya": [6, 8], "entityb": [6, 8], "out_dir": [6, 20, 49, 50, 51, 52], "entitya_state_cart_fl": [6, 8], "entityb_state_cart_fl": [6, 8], "out_filenam": [6, 20, 52], "out_typ": [6, 7, 20, 21, 52], "outtyp": [6, 7, 20, 21, 49, 52, 54], "opaque_atmos_height": [6, 7], "find": [6, 11, 13, 15, 18, 20, 26, 46, 50], "line": [6, 7, 11, 20, 26, 27, 49, 52, 54, 58], "sight": [6, 7, 20, 26, 27, 49, 52, 54, 58], "two": [6, 7, 13, 26, 27, 35, 45, 49, 50, 51, 52, 54, 59, 63, 64], "station": [6, 7, 26, 33, 47, 49, 54, 57, 58, 59, 61], "row": [6, 10, 11, 12, 13, 14, 18, 20, 28, 49, 50, 51, 52, 55], "indic": [6, 7, 10, 11, 12, 13, 18, 20, 21, 22, 26, 34, 47, 49, 50, 52, 53, 54, 63], "evalu": [6, 10, 12, 13, 18, 20, 49, 50, 51, 52, 54, 61, 64], "epoch": [6, 10, 11, 12, 13, 18, 20, 26, 28, 41, 49, 50, 51, 52, 54, 55, 59, 61, 63], "dai": [6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 26, 28, 30, 34, 41, 49, 50, 51, 52, 54, 55, 57, 59, 63, 64], "index": [6, 10, 11, 12, 13, 14, 18, 20, 22, 28, 45, 46, 49, 50, 51, 52, 54, 55, 63], "referenc": [6, 10, 11, 12, 13, 18, 20, 28, 49, 50, 51, 52, 55], "third": [6, 10, 11, 12, 13, 18, 20, 28, 49, 50, 51, 52, 55, 61], "later": [6, 20, 49, 52], "column": [6, 10, 11, 12, 13, 14, 18, 20, 28, 49, 50, 51, 52, 53, 55, 63, 64], "header": [6, 10, 11, 12, 13, 18, 20, 28, 49, 50, 51, 52, 53, 55], "unit": [6, 10, 11, 12, 13, 18, 20, 28, 49, 50, 51, 52, 54, 55, 61, 63, 64], "start": [6, 7, 11, 12, 19, 20, 21, 22, 28, 30, 45, 49, 50, 52, 53, 55, 61, 63], "stop": [6, 20, 49, 52, 61], "elev": [6, 33, 49, 54, 57, 63], "appear": [6, 49], "case": [6, 7, 8, 10, 12, 13, 14, 25, 26, 27, 31, 34, 47, 49, 50, 53, 54, 55, 59, 61, 63, 64], "bool": [6, 10, 12, 13, 20, 26, 27, 49, 52, 54], "t": [6, 20, 47, 49, 50, 52, 61, 64], "true": [6, 13, 20, 26, 27, 28, 34, 49, 50, 52, 54, 55, 61, 63], "f": [6, 20, 49, 52], "fals": [6, 10, 11, 12, 13, 20, 49, 50, 51, 52], "rang": [6, 22, 49, 51, 53, 54, 61, 63], "km": [6, 13, 26, 27, 28, 33, 34, 49, 51, 54, 55, 63, 64], "distanc": [6, 13, 49], "spacecraft": [6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 25, 26, 28, 30, 31, 35, 37, 42, 49, 50, 51, 52, 53, 55, 58, 59, 61], "groundstat": [6, 7, 8, 26, 49, 52], "path": [6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 49, 50, 51, 52, 53, 54, 55, 59, 63], "where": [6, 7, 8, 11, 12, 18, 19, 20, 21, 22, 23, 26, 30, 43, 47, 49, 50, 52, 54, 61, 63, 64], "store": [6, 8, 17, 20, 22, 24, 33, 34, 36, 37, 49, 52, 53, 54, 57], "when": [6, 13, 14, 20, 25, 26, 27, 42, 47, 50, 53, 54, 61, 63, 64], "name": [6, 10, 11, 12, 13, 14, 18, 20, 28, 33, 36, 37, 49, 50, 52, 54, 57, 59, 63, 64], "j2analyticalpropag": [6, 10, 11, 12, 13, 18, 20, 26, 29, 50, 51], "seri": [6, 7, 21, 30, 49], "must": [6, 10, 11, 12, 13, 14, 18, 40, 44, 49, 50, 52], "sync": [6, 49], "written": [6, 10, 11, 12, 13, 14, 18, 20, 22, 26, 28, 49, 50, 52, 54], "If": [6, 7, 10, 11, 12, 13, 14, 15, 18, 20, 22, 26, 28, 33, 36, 43, 46, 50, 54, 63], "filenam": [6, 7, 14, 19, 20, 21, 22, 23, 30, 49, 50, 52, 54], "deriv": 6, "entityaname_to_entitybnam": 6, "save": [6, 7, 19, 20, 21, 23, 26, 30], "height": [6, 7, 26, 27, 31, 42, 49, 54, 55, 64], "atmospher": [6, 7, 26, 27, 49, 54], "cannot": [6, 7, 26, 27, 47, 54], "take": [6, 7, 14, 26, 27, 47, 50, 54, 57, 64], "valu": [6, 10, 12, 22, 25, 26, 27, 28, 32, 33, 34, 36, 38, 53, 54, 59, 61, 63, 64], "info": [6, 10, 11, 12, 13, 18, 20, 22, 26, 28, 35, 50, 51, 53, 54, 55, 59, 63], "contactfinderoutputinfo": [6, 26, 35, 49], "find_all_pair": [6, 49], "entity_state_cart_fl": 6, "all": [6, 10, 11, 12, 13, 18, 22, 26, 42, 46, 48, 50, 53, 54, 59, 61, 63, 64], "possibl": [6, 11, 12, 18, 22, 26, 50, 54, 55, 59, 61, 64], "pair": [6, 8, 14, 22, 26, 33, 34, 36, 50, 54, 59, 63], "entri": [6, 7, 10, 12, 13, 26], "correpsond": 6, "namedtupl": [6, 8, 10, 11, 12, 13, 15, 16, 17, 18, 22, 24, 26, 34, 42, 51], "entityatyp": 7, "entityaid": 7, "entitybtyp": 7, "entitybid": 7, "entityastatecartfil": 7, "entitybstatecartfil": 7, "contactfil": 7, "opaqueatmosheight": [7, 26, 27, 54], "startdat": [7, 19, 21, 26, 30, 54, 55, 59], "hold": [7, 19, 21, 23, 30], "upon": [7, 19, 21, 30, 49, 51, 52, 54, 59], "b": [7, 50, 61], "out": [7, 13, 14, 21, 30, 46, 50, 51, 64], "Will": 7, "check_loose_equ": [7, 19, 21, 23, 30, 35], "check": [7, 13, 18, 19, 21, 23, 30, 39, 46, 49, 61, 64], "equal": [7, 19, 21, 23, 30, 35, 48, 50, 55, 61], "anoth": [7, 19, 21, 23, 30, 49, 50, 59], "some": [7, 19, 21, 23, 30, 35, 47, 54, 61], "comparis": [7, 19, 21, 23, 30], "shall": [7, 13, 19, 21, 23, 24, 26, 28, 30, 34, 35, 50, 54, 61, 63], "attribut": [7, 18, 19, 21, 23, 30, 32, 33, 36, 37, 38, 54, 57, 63], "gridcoverag": [9, 11, 12, 14, 51, 61], "pointingoptionscoverag": [9, 61], "pointingoptionswithgridcoverag": [9, 61], "specularcoverag": 9, "register_coverage_calcul": 9, "coveragefind": 9, "cov_calc": 9, "get_coverage_calcul": 9, "state_cart_fil": [10, 11, 12, 18, 50, 51], "handl": [10, 11, 12, 13, 18, 22, 26, 33, 34, 35, 36, 37, 50, 51, 53, 55, 57], "particular": [10, 12, 18, 50, 51, 54, 64], "locat": [10, 11, 12, 13, 17, 18, 22, 26, 27, 35, 50, 51, 53, 54, 58, 59, 61], "longitud": [10, 11, 12, 13, 18, 22, 24, 33, 49, 50, 51, 53, 54, 57, 63], "latitud": [10, 11, 12, 13, 18, 22, 24, 33, 49, 50, 51, 53, 54, 57, 61, 63], "repres": [10, 11, 12, 13, 22, 50, 57, 61, 63], "perform": [10, 11, 12, 13, 18, 50, 51, 58, 59], "cov_param": [10, 11, 12, 13], "per": [10, 11, 12, 13, 28, 55, 61, 63, 64], "helper_extract_coverage_parameters_of_spacecraft": [10, 11, 12, 13], "instru_id": [10, 11, 12, 13, 15, 17, 18, 50, 51], "mode_id": [10, 11, 12, 13, 15, 16, 17, 18, 50, 51, 61], "use_field_of_regard": [10, 50, 51], "out_file_access": [10, 11, 12, 50, 51], "mid_access_onli": [10, 12, 50, 51, 61], "directsphericalpip": [10, 12, 13, 50, 54, 59, 61, 64], "resolut": [10, 11, 12, 13, 22, 25, 26, 27, 31, 42, 50, 53, 54, 55, 58, 59, 61, 63, 64], "note": [10, 11, 12, 13, 18, 28, 31, 34, 46, 50, 51, 53, 54, 55, 57, 61, 63, 64], "mai": [10, 12, 13, 18, 48, 50, 51, 55, 58, 61, 63], "unless": [10, 50], "field": [10, 12, 14, 15, 16, 18, 25, 26, 31, 50, 53, 54, 55, 58, 59, 61, 63], "regard": [10, 12, 14, 15, 16, 25, 26, 31, 50, 53, 54, 55, 58, 61], "present": [10, 13, 18, 22, 36, 50, 51, 54, 61, 63, 64], "boolean": 10, "flag": [10, 12, 26, 27, 50, 54, 61], "view": [10, 12, 14, 15, 16, 25, 26, 31, 50, 53, 58, 59], "fourth": [10, 11, 12, 13, 18, 28, 50, 51, 55], "fifth": [10, 11, 12, 13, 18, 28, 50, 51, 55], "sixth": [10, 11, 12, 13, 18, 28, 50, 51, 55], "onward": [10, 11, 12, 13, 18, 28, 50, 51, 55, 63], "associ": [10, 11, 12, 13, 18, 26, 28, 40, 44, 50, 51, 55, 64], "sec": [10, 11, 12, 13, 18, 28, 50, 51, 55], "86400": [10, 11, 12, 13, 18, 28, 50, 51, 55], "given": [10, 11, 12, 13, 18, 25, 26, 28, 35, 50, 51, 53, 54, 55, 58, 59, 61, 63, 64], "gp": [10, 12, 13, 14, 18, 47, 50, 51], "middl": [10, 12, 14, 26, 27, 50, 54], "continu": [10, 12, 26, 50], "interv": [10, 12, 14, 26, 27, 31, 50, 54, 55, 58, 59, 64], "spheric": [10, 12, 13, 31, 50, 54, 55, 59, 61, 64], "polygon": [10, 12, 13, 50, 54, 59, 61, 64], "vertic": [10, 12, 13, 50, 54, 59], "rectangular": [10, 12, 13, 25, 31, 47, 50, 53, 54, 55, 57, 59, 61, 64], "projectedpip": [10, 12, 13, 50, 61, 64], "rectangularpip": [10, 12, 13, 50, 64], "dspipcustomsensor": [10, 12, 13], "while": [10, 12, 13, 47, 53, 58, 64], "gmatcustomsensor": [10, 12, 13], "articl": [10, 12, 13, 50], "r": [10, 11, 12, 13, 50, 58, 61, 63], "ketzner": [10, 12, 13, 50, 58], "v": [10, 12, 13, 47, 50, 58, 61, 64], "ravindra": [10, 12, 13, 45, 50, 58], "m": [10, 12, 13, 50, 54], "brambl": [10, 12, 13, 50], "robust": [10, 12, 13, 50], "fast": [10, 12, 13, 50], "accur": [10, 12, 13, 50], "algorithm": [10, 12, 13, 49, 50, 52, 64], "classif": [10, 12, 13, 50], "applic": [10, 12, 13, 49, 50, 52], "geoscienc": [10, 12, 13, 50, 58], "remot": [10, 12, 13, 50, 58], "sens": [10, 12, 13, 50, 58], "accept": [10, 12, 50, 54, 63, 64], "abov": [10, 12, 13, 47, 50, 54, 55], "compar": [10, 12, 13, 35, 61, 64], "gmat": [10, 12, 13, 28, 45, 55, 61], "customsensor": [10, 12, 13], "improv": [10, 12, 13, 64], "geometri": [10, 12, 13, 31, 55], "shape": [10, 12, 13, 31, 50, 51, 53, 54, 55, 57, 59], "rectangularsensor": [10, 12, 13], "dot": [10, 12, 13], "product": [10, 12, 13], "target": [10, 12, 13, 18, 51, 58, 61, 64], "hemispher": [10, 12, 13, 61], "form": [10, 12, 13], "4": [10, 12, 13, 47, 50, 53, 54, 57, 63, 64], "edg": [10, 12, 13], "rectangl": [10, 12, 13], "corner": [10, 12, 13], "arrang": [10, 12, 13], "anti": [10, 12, 13], "clockwis": [10, 12, 13], "manner": [10, 12, 13, 14, 49, 50, 52], "center": [10, 11, 12, 13, 28, 34, 50, 52, 55, 57, 59], "northern": [10, 12, 13], "fall": [10, 12, 13, 50, 58], "within": [10, 12, 13, 25, 50, 53, 54, 58, 63], "coverageoutputinfo": [10, 11, 12, 13, 26, 35, 50], "cartesianstatefilepath": [10, 11, 12, 13, 18], "nadir_point": [11, 12, 31, 36, 50, 51, 54, 55, 57, 59, 61], "frame": [11, 12, 13, 28, 31, 36, 37, 50, 52, 54, 55, 57, 59, 61, 64], "due": [11, 12, 50, 55, 61, 64], "maneuver": [11, 12, 50, 55, 61], "bu": [11, 12, 26, 36, 37, 50, 51, 54, 57, 61], "includ": [11, 13, 49, 54, 57, 58, 59, 61, 64], "definit": [11, 54, 63, 64], "pnt": [11, 12, 18, 50, 51], "opt": [11, 12, 18, 50, 51], "intersect_vector_spher": 11, "o": [11, 49, 50, 51, 52, 53, 54, 55, 59], "vec_direc": 11, "vector": [11, 13, 64], "sphere": [11, 13], "origin": [11, 13], "express": [11, 64], "assum": [11, 13, 26, 31, 50, 55, 63], "en": [11, 45], "wikipedia": 11, "org": [11, 45], "wiki": 11, "e2": 11, "80": [11, 50, 53, 59], "93sphere_intersect": 11, "radiu": [11, 13, 49, 53, 55, 64], "posit": [11, 13, 28, 33, 34, 51, 52, 54, 55, 57, 58, 61, 64], "opportun": [12, 14, 47, 49, 50], "seper": [12, 28, 63], "scope": [12, 50], "rx_spc": [13, 50], "rx_state_fil": [13, 50], "tx_spc": [13, 50], "tx_state_fil": [13, 50], "reflectomet": [13, 50], "involv": [13, 26, 49, 50, 52, 54, 64], "specular": [13, 58], "predefin": 13, "circular": [13, 31, 50, 51, 54, 55, 57, 59, 61, 64], "region": [13, 22, 25, 50, 53, 54, 58, 59, 63], "receiv": [13, 50, 58], "provid": [13, 20, 26, 34, 46, 47, 49, 50, 51, 52, 54, 55, 57, 59, 64], "dure": [13, 31, 50, 51, 55], "instanti": [13, 50], "across": [13, 50, 64], "transmitt": [13, 50, 58], "transmit": [13, 50], "rf": [13, 50], "signal": [13, 50], "entir": [13, 47, 50, 63, 64], "visibl": [13, 50], "horizon": [13, 50], "reflect": 13, "g": [13, 22, 26, 49, 50, 54, 57], "gnss": 13, "order": [13, 46, 47, 64], "match": [13, 15, 18, 35, 36, 64], "src": [13, 45], "check_point_in_circl": 13, "diamet": [13, 50, 51, 54, 55, 57, 59, 64], "belong": [13, 36], "insid": [13, 58], "circl": 13, "measur": 13, "great": 13, "geo": [13, 23, 53], "out_file_specular": [13, 50], "specular_region_dia": [13, 50], "out_file_grid_access": [13, 50], "seen": [13, 14, 50, 54, 61, 64], "howev": [13, 47, 50, 64], "doe": [13, 20, 46, 49, 50, 52, 57, 61, 64], "work": [13, 45, 47, 48, 50, 55, 59, 61], "through": [13, 45, 50, 64], "found": [13, 36, 50, 54, 59, 64], "approxim": [13, 14, 50, 61], "notimplementederror": [13, 50], "thrown": [13, 50], "modifi": [13, 50], "behaviour": [13, 50], "locaion": 13, "depend": [13, 22, 35, 46, 61], "topographi": 13, "should": [13, 14, 26, 47, 50, 54, 58, 61, 63], "addition": [13, 48, 50, 55], "acccept": 13, "specular_loc": 13, "david": [13, 49, 52], "eberli": 13, "geometr": 13, "tool": 13, "2008": 13, "www": 13, "geometrictool": 13, "spherereflect": 13, "pdf": 13, "scale": [13, 57], "inp_acc_df": 14, "inp_acc_fl": 14, "out_acc_fl": 14, "extract": [14, 16, 18, 41, 51], "datafram": 14, "correct": [14, 26, 27, 47, 54, 61], "pure": [14, 26, 27, 47, 54], "side": [14, 25, 26, 27, 47, 53, 54, 61], "look": [14, 26, 27, 47, 51, 54], "eg": [14, 50, 54, 61, 63], "sar": [14, 26, 27, 45, 47, 50, 54, 61], "stripmap": [14, 47, 50], "squint": [14, 50], "almost": [14, 50], "instantan": [14, 50], "impract": [14, 50], "long": [14, 50], "thu": [14, 50, 61], "independ": [14, 50], "interpret": [14, 50], "show": [14, 50, 64], "nearest": [14, 50], "scan": [14, 47, 50], "smaller": [14, 31, 50, 55, 61, 64], "than": [14, 25, 50, 53, 61, 63, 64], "FOR": [14, 26, 27, 31, 42, 47, 50, 54, 55, 58, 61], "pd": 14, "filter": [14, 47], "filepath": [14, 18, 22, 50, 51, 53, 54, 55], "cov_param_list": 15, "tupl": [15, 16, 18, 33, 41, 42], "pointing_opt": [15, 16], "viewgeometri": [15, 16, 61], "singl": [15, 16, 18, 28, 43, 54, 61], "spc": [16, 49, 52], "helper": [16, 42], "instrument_id": 16, "access_filepath": [17, 18], "access_file_info": 18, "accessfileinfo": [18, 51], "mayb": 18, "incomplet": 18, "add_access_file_info": [18, 51], "add": [18, 26, 36, 39, 49, 51, 55], "becom": [18, 63], "acc_info": 18, "exist": [18, 20, 39, 47, 49, 52], "befor": [18, 61, 64], "ad": [18, 36, 51], "paramtyp": [18, 35, 61], "out_datametrics_fl": [18, 51], "iter": 18, "doc": [18, 46, 49, 50, 51], "datametricsoutputinfo": [18, 35, 51], "featur": [18, 64], "instruid": [18, 19], "modeid": [18, 19], "accessfilepath": 18, "search_access_file_info": 18, "search": [18, 45], "spacecraftid": [19, 21, 30, 54, 55, 59], "accessfil": 19, "datametricsfil": 19, "state_cart_fl": [20, 52], "NOT": [20, 22, 53, 63], "sun": [20, 52, 64], "eclipsefinderoutputinfo": [20, 35, 52, 54], "statecartfil": [21, 30, 54, 55, 59], "eclipsefil": [21, 54], "point_group": 22, "relat": [22, 46, 47, 50, 53, 63], "pointgroup": 22, "obtain": [22, 26, 49, 52, 54], "getlatlon": 22, "getpointpositionvector": 22, "num_point": [22, 53], "total": [22, 53, 54, 63, 64], "from_customgrid_dict": [22, 26], "could": [22, 64], "from_autogrid_dict": [22, 26], "autogrid": [22, 26, 50, 51, 53, 59, 63], "latupp": [22, 50, 51, 53, 54, 59, 63], "upper": [22, 54, 63], "90": [22, 53, 54, 63, 64], "latlow": [22, 50, 51, 53, 54, 59, 63], "lower": [22, 54, 63], "lonupp": [22, 50, 51, 53, 54, 59, 63], "180": [22, 50, 51, 53, 54, 57, 59, 61, 63, 64], "lonlow": [22, 50, 51, 53, 54, 59, 63], "gridr": [22, 50, 51, 53, 54, 59], "absent": [22, 54], "assign": [22, 33, 36, 54, 57, 59], "bound": [22, 46, 53, 54, 64], "20": [22, 50, 51, 53, 54, 57, 59, 61, 63, 64], "15": [22, 25, 50, 51, 53, 54, 55, 59, 61, 63, 64], "customgrid": [22, 26, 53, 54, 63], "covgridfilepath": [22, 53, 54, 63], "101": [22, 47, 54, 61], "c": [22, 45, 46, 54, 59, 63], "workspac": [22, 53, 54, 55, 59, 63], "covgridusa": [22, 54, 63], "datafil": [22, 63], "1015": [22, 63], "203": [22, 63], "49": [22, 52, 53, 61, 63, 64], "9856": [22, 63], "1383": [22, 63], "291": [22, 63], "4438": [22, 63], "5965": [22, 63], "7493": [22, 63], "902": [22, 63], "do": [22, 53, 61, 63, 64], "360": [22, 53, 63], "manifest": 22, "from_autogrid": 22, "from_custom_grid": 22, "get_lat_lon": [22, 53], "get_lat_lon_from_index": [22, 53], "whose": [22, 28, 47, 54], "suppli": [22, 48, 54, 55, 63], "write_to_fil": [22, 53], "gridoutputinfo": [22, 35, 53], "gridid": [23, 53], "gridfil": [23, 53], "grid_res_fac": [25, 53], "smad": [25, 54, 61, 63], "113": [25, 64], "fig": 25, "8": [25, 45, 46, 50, 54, 55, 57, 59, 64], "13": [25, 50, 53, 61, 64], "ani": [25, 37, 46, 50, 51, 53, 61, 63, 64], "arbitrari": [25, 53], "footprint": [25, 31, 47, 53, 55], "its": [25, 53, 64], "captur": [25, 53, 61], "atleast": [25, 53], "one": [25, 26, 37, 47, 51, 53, 54, 57, 63, 64], "somewher": [25, 53], "well": [25, 47, 53, 64], "interior": [25, 53], "achiev": [25, 53], "less": [25, 53, 64], "minimum": [25, 31, 33, 47, 49, 53, 54, 57, 63], "angular": [25, 53, 58], "exampl": [25, 45, 59, 64], "500km": [25, 53], "centric": [25, 53, 61], "subtend": [25, 53, 61], "3922": [25, 53], "give": [25, 51, 53, 63], "3530": [25, 53], "decid": [25, 31, 64], "typic": [25, 53], "coarser": [25, 53, 61, 63], "mission_json_str": [26, 54], "after": [26, 54, 61, 64], "propagatoroutputinfo": [26, 28, 35, 54, 55, 59], "add_constellation_from_dict": 26, "constel_dict": 26, "spc_bus_dict": 26, "instru_dict": 26, "them": 26, "add_coverage_grid_from_dict": 26, "grid_dict": 26, "updat": [26, 45, 53], "instanac": 26, "auto": [26, 27, 53, 54, 58, 61, 63], "execute_coverage_calcul": 26, "expect": [26, 27, 33, 34, 35, 36, 54, 59, 61, 64], "add_groundstation_from_dict": 26, "add_instrument_to_spacecraft": 26, "new_instru": [26, 36], "sensor_to_spc": 26, "attach": [26, 54], "add_spacecraft_from_dict": 26, "clear": 26, "re": [26, 53, 55, 61], "WITH": [26, 54], "heterogen": [26, 39, 57], "execute_archiv": 26, "prior": [26, 64], "execute_datametrics_calcul": 26, "execute_eclipse_find": 26, "execute_groundstation_contact_find": 26, "execute_intersatellite_contact_find": 26, "execute_propag": 26, "output0info": 26, "build": [26, 54], "ident": [26, 28, 54, 55, 64], "60": [26, 28, 50, 63, 64], "get_spacecraft_orbit_spec": 26, "radian": 26, "save_auto_grid": 26, "update_coverage_settings_from_dict": 26, "coveragetyp": [26, 27, 54, 59], "gridresfactor": [26, 27, 54], "influenc": [26, 27, 54, 61], "compute_grid_r": [26, 27, 53, 54], "update_dur": 26, "update_epoch_from_dict": 26, "update_propagator_set": 26, "prop_dict": 26, "proptimeresfactor": [26, 27, 54], "compute_time_step": [26, 27, 54, 55, 59], "update_set": 26, "outdir": [26, 27, 54], "midaccessonli": [26, 27, 54], "inter": [26, 27, 54, 58, 59, 61], "like": [26, 27, 46, 47, 54, 64], "pushbroom": [26, 27, 47, 54], "current": [27, 47, 48, 54, 63], "25": [27, 31, 49, 50, 51, 54, 55, 57, 59, 61, 63, 64], "stepsiz": [28, 49, 50, 51, 52, 54, 55, 59], "j2": [28, 49, 50, 51, 52, 54, 55, 59, 64], "analyt": [28, 49, 50, 51, 52, 54, 55, 59, 61, 64], "start_dat": [28, 50], "out_file_cart": [28, 49, 50, 52, 55], "out_file_kep": [28, 55, 59], "inerti": [28, 34, 52, 55, 57, 59], "earthmj2000eq": [28, 55], "nasa": [28, 45, 55], "coordinatesystem": [28, 55], "comma": [28, 63], "compon": [28, 55], "veloc": [28, 34, 54, 55, 57, 58, 64], "similar": [28, 47, 50], "except": [28, 48, 50], "semi": [28, 42, 55, 63, 64], "major": [28, 42, 55, 63, 64], "right": [28, 34, 54, 55, 63], "ascens": [28, 34, 54, 55, 63], "ascend": [28, 34, 54, 55, 63], "node": [28, 34, 55, 63], "anomali": [28, 34, 54, 55, 63], "register_propag": 29, "sgp4": [29, 55], "sgp4propag": 29, "prop": 29, "get_propag": [29, 49, 52, 55, 59], "propagatortyp": [30, 54, 55, 59], "statekeplerianfil": [30, 54, 55, 59], "time_res_fac": [31, 55], "taken": [31, 55, 57, 58, 64], "length": [31, 34, 54, 55, 58, 63], "higher": [31, 55], "precis": [31, 55], "alwai": [31, 55, 61], "chanc": [31, 55], "miss": [31, 36, 55], "nadir": [31, 50, 54, 55, 57, 61, 64], "align": [31, 42, 47, 50, 54, 55, 57, 61], "enumer": [32, 38, 57], "gregorian_ut1": [32, 34, 49, 50, 51, 52, 54, 55, 57, 59], "minimumelev": [33, 49, 54, 57, 63], "geocentr": [33, 54, 57], "minmum": 33, "properti": [33, 36, 37], "0km": [33, 54, 63], "get_coord": 33, "sever": [34, 54, 57, 58], "represent": [34, 57], "inbuilt": [34, 57], "datatyp": [34, 57], "appli": [34, 50, 54, 64], "year": [34, 49, 50, 51, 52, 54, 55, 57, 59, 63], "month": [34, 49, 50, 51, 52, 54, 55, 57, 59, 63], "hour": [34, 49, 50, 51, 52, 54, 55, 57, 59, 63], "minut": [34, 49, 50, 51, 52, 54, 55, 57, 59], "date_to_dict": 34, "get_cartesian_earth_centered_inertial_st": 34, "get_julian_d": 34, "get_keplerian_earth_centered_inertial_st": 34, "six": 34, "semimajor": [34, 54], "state_to_dict": [34, 57], "state_typ": [34, 37, 57], "delete_output_info_object_in_list": 35, "out_info_list": 35, "other_out_info_object": 35, "remov": 35, "loos": 35, "know": [35, 64], "care": 35, "comparison": [35, 64], "made": [35, 39, 47, 50, 54, 61, 64], "potenti": 35, "reduc": 35, "delet": 35, "locate_output_info_object_in_list": 35, "out_info_typ": 35, "outputinfotyp": 35, "keyword": 35, "interest": [35, 58, 59], "spacecraft_id": 35, "inp_cov_typ": 35, "inp_instru_id": 35, "inp_mode_id": 35, "inp_grid_id": 35, "spacecraftbu": [36, 50, 51, 59], "add_instru": 36, "convent": [36, 50, 51, 54, 57, 59], "ref_frame_align": [36, 50, 51, 54, 57, 59], "get_id": 36, "get_instru": 36, "sensor_id": 36, "mass": [37, 54, 57, 59], "volum": [37, 54, 57, 59], "solarpanelconfig": 37, "kg": 37, "m3": 37, "referencefram": [37, 50, 51, 54, 57, 59, 63], "solar_panel_config": 37, "todo": [37, 56], "revis": [37, 47, 61, 64], "solar": [37, 51], "panel": 37, "cartesian_earth_fix": [38, 57], "existing_list": 39, "inp_list": 39, "extend": 39, "cl": [40, 43, 44], "state_fil": 41, "auxillari": [41, 59], "nametupl": 41, "width": [42, 64], "nadir_pointing_fram": 42, "inp": 43, "invalid": [43, 47], "obj_list": 44, "last": [45, 47, 64], "10": [45, 47, 49, 50, 52, 53, 54, 55, 57, 59, 61, 63, 64], "feb": 45, "2022": [45, 50], "recommend": [45, 46], "wai": [45, 59, 61, 63], "read": [45, 47, 54, 55], "guid": 45, "instal": [45, 62], "setup": [45, 46, 61], "overview": [45, 62], "api": [45, 59], "simpl": 45, "planet": 45, "skysat": 45, "landsat": 45, "seahawk": 45, "hypothet": 45, "miscellan": 45, "vinai": 45, "vravindra": 45, "baeri": 45, "gov": 45, "fund": 45, "grant": 45, "nation": 45, "aeronaut": 45, "administr": 45, "scienc": 45, "technologi": 45, "offic": 45, "esto": 45, "advanc": 45, "system": [45, 46, 58, 59, 63], "aist": 45, "program": 45, "gmat2020a": 45, "gmatutil": 45, "sourceforg": 45, "net": 45, "git": 45, "ci": 45, "r2020a": 45, "tree": 45, "pybind11": 45, "readthedoc": 45, "io": 45, "stabl": 45, "basic": [45, 50, 51, 53, 54, 55, 57, 59, 61, 63], "html": [45, 46], "modern": 45, "github": 45, "nlohmann": 45, "unix": 46, "pip": 46, "gcc": 46, "make": [46, 50, 51, 58, 61, 64], "cmake": 46, "conda": 46, "environ": 46, "instruct": 46, "readm": [46, 58], "md": [46, 58], "root": 46, "automat": 46, "error": [46, 64], "encount": 46, "numpi": 46, "panda": 46, "scipi": 46, "sphinx": 46, "sphinx_rtd_them": 46, "runtest": [46, 61], "verifi": [46, 64], "_build": 46, "wrapper": [46, 51], "code": [46, 50, 51, 55, 61, 63, 64], "arrai": [46, 53, 54, 58], "uninstal": 46, "bare": 46, "termin": 46, "bind": 46, "how": 46, "word": 46, "cpp": 46, "docx": 46, "mac": 46, "report": [46, 64], "mostli": 46, "environment": 46, "wrong": 46, "compil": 46, "select": [46, 50, 51], "debug": 46, "concept": 47, "outdat": 47, "necessari": [47, 51, 59], "issu": [47, 63], "observ": [47, 50, 58, 59, 61, 64], "condit": [47, 49, 52, 58], "met": 47, "But": 47, "radiomet": 47, "focus": 47, "realist": 47, "exposur": 47, "dwell": 47, "assumpt": 47, "wide": 47, "quit": 47, "naiv": 47, "instant": 47, "what": [47, 64], "we": [47, 64], "outlier": 47, "area": [47, 49], "around": 47, "abl": [47, 58], "just": [47, 64], "Not": 47, "larg": [47, 55], "especi": 47, "unclassifi": 47, "With": [47, 58], "ac": 47, "opp": 47, "qualiti": 47, "planner": 47, "three": [47, 50, 64], "item": [47, 63], "straightforward": 47, "directli": [47, 63, 64], "raw": 47, "post": 47, "desir": 47, "100": [47, 50], "210": 47, "deal": 47, "deem": 47, "missl": 47, "flow": 47, "natur": 47, "domain": 47, "No": [47, 61], "99": [47, 49], "ye": 47, "102": [47, 53], "103": [47, 50], "iff": 47, "104": 47, "free": 47, "105": [47, 50], "106": [47, 53], "115": [47, 54, 57], "116": 47, "ob": 47, "To": 47, "constraint": [47, 64], "tabl": [47, 54, 61, 64], "implicit": 47, "oppurtun": 47, "collect": [48, 51, 57], "pattern": [48, 50, 53, 55], "own": [48, 50, 54, 55], "adher": [48, 50, 55], "interfac": [48, 50, 55], "4858": 48, "713737315466": 48, "3435": 48, "629431500001": 48, "6294315": 48, "388312480793739": 48, "8101122943213612": 48, "810112294321361": 48, "abc_11": 48, "4868": 48, "440891944725": 48, "3442": 48, "5075685000006": 48, "5075685": 48, "377546621691256": 48, "8024996823446955": 48, "8024996823446946": 48, "abc_12": 48, "lo": [49, 52], "geoutilityfunct": [49, 52], "checklosavail": [49, 52], "call": [49, 52, 54, 61], "occlud": [49, 52], "bodi": [49, 50, 52, 61], "198": [49, 52], "fundament": [49, 52], "astrodynam": [49, 52], "vallado": [49, 52], "being": 49, "creation": [49, 52], "concis": [49, 52], "meta": [49, 50, 51, 52, 59], "spca": 49, "spcb": 49, "pass": [49, 51, 52, 64], "spca_to_spcb": 49, "opaqu": 49, "30km": 49, "increas": [49, 64], "occlus": 49, "propagatorfactori": [49, 52, 55, 59], "dirnam": [49, 50, 51, 52, 53, 55, 59], "realpath": [49, 50, 51, 52, 53, 55, 59], "__file__": [49, 50, 51, 52, 53, 55, 59], "j2_prop": [49, 50, 51, 52, 55, 59], "12": [49, 50, 51, 52, 54, 55, 57, 59, 61, 63, 64], "29": [49, 52, 61, 64], "7073": [49, 52], "000133": [49, 52], "1818": 49, "38": [49, 52, 55, 61, 64], "3243": [49, 52], "86": [49, 52], "2045": [49, 52], "273": [49, 50, 52, 61], "932": [49, 52], "state_cart_file_spca": 49, "cart_states_spca": 49, "1816": 49, "150": 49, "84": [49, 50, 51, 64], "837": 49, "275": 49, "state_cart_file_spcb": 49, "cart_states_spcb": 49, "out_info": [49, 50, 52, 53, 54, 55, 59], "30": [49, 50, 51, 53, 55, 61, 63, 64], "entity1": 49, "83aca45": 49, "9b13": 49, "4bc9": 49, "9a7a": 49, "cbf542aa6cca": 49, "entity2": 49, "6a0944c8": 49, "934c": 49, "410e": 49, "bfe2": 49, "0ec7d3c7000d": 49, "2459243": [49, 52], "020162037": [49, 52], "end": [49, 50, 52], "197": [49, 50], "396": 49, "494": 49, "692": 49, "790": 49, "989": [49, 50], "1087": 49, "euro_to_atl": 49, "euro": 49, "atl": [49, 54, 57], "state_cart_file_spc": [49, 52], "cart_states_spc": [49, 52], "833": 49, "88": [49, 53, 54, 57, 63, 64], "bd66e4c5": 49, "cb73": 49, "4c09": 49, "831a": 49, "5a75acd4300": 49, "9448": 49, "07": [49, 61], "9497": 49, "69": [49, 64], "407": 49, "3090": 49, "93": [49, 51], "408": 49, "3028": 49, "52": [49, 54], "409": 49, "2966": 49, "33": [49, 61, 64], "87": [49, 50, 51, 64], "410": 49, "2904": 49, "mean": [50, 63], "450": 50, "451": 50, "452": 50, "453": [50, 61], "454": 50, "behavior": [50, 61], "lead": [50, 61], "sidewai": 50, "figur": [50, 55], "strip": 50, "concaten": 50, "sai": 50, "actual": 50, "177": 50, "round": 50, "rough": 50, "flowchart": 50, "containt": 50, "snippet": [50, 51, 55, 59], "equatori": [50, 52, 57, 61, 64], "equat": 50, "turn": 50, "sc_body_fix": [50, 51, 54, 57, 59], "everi": [50, 64], "tick": [50, 52], "2018": [50, 51, 55], "26": [50, 51, 54, 55, 57, 61, 64], "120": [50, 51, 55], "instru": [50, 59], "fieldofviewgeometri": [50, 51, 53, 54, 55, 57, 59], "sc": [50, 51, 55, 64], "cart_stat": [50, 51], "cov_cal": [50, 51], "2458265": [50, 51, 55], "4303": [50, 51], "76": [50, 51], "4304": 50, "78": [50, 53, 63], "11": [50, 61, 63, 64], "instead": 50, "mid": 50, "17": [50, 61], "34": [50, 61], "4305": 50, "51": [50, 61, 64], "4306": 50, "82": [50, 64], "equip": [50, 63], "absenc": 50, "instru1": [50, 51, 53, 55], "instru2": [50, 51, 53, 55], "angleheight": [50, 53, 54, 55, 57, 59, 61], "anglewidth": [50, 53, 54, 55, 57, 59, 61], "maneuvertyp": [50, 53, 54, 55, 57, 59], "single_roll_onli": [50, 61], "a_rollmin": [50, 53], "a_rollmax": [50, 53], "35": [50, 52, 54, 57, 59, 61, 63, 64], "3943": [50, 51], "3944": 50, "3945": 50, "3946": 50, "68": [50, 64], "3947": 50, "pointingopt": [50, 57, 61], "xyz": [50, 57], "xrotat": [50, 57], "yrotat": [50, 57], "zrotat": [50, 57], "108": 50, "226": 50, "28958": 50, "71": 50, "28599": 50, "28959": 50, "713": 50, "28600": 50, "77": [50, 51, 53, 64], "navstar": 50, "79": [50, 53, 64], "81": [50, 53, 64], "test_specular_access": 50, "test_grid_access": 50, "50km": 50, "navstar79_json": 50, "14": [50, 51, 61, 64], "26560": 50, "726": 50, "00211560": 50, "55": [50, 53, 61, 63], "4987": 50, "6401": 50, "178": 50, "443": 50, "346": 50, "190": 50, "navstar79": 50, "navstar79_state_fl": 50, "navstar79_st": 50, "navstar80_json": 50, "58": [50, 61], "217": 50, "00185450": 50, "54": 50, "5899": 50, "271": 50, "4221": 50, "184": 50, "7310": 50, "336": 50, "981": 50, "navstar80": 50, "navstar80_state_fl": 50, "navstar80_st": 50, "navstar81_json": 50, "300": 50, "26559": 50, "327": [50, 63], "00036260": 50, "1689": 50, "32": [50, 53, 54, 57, 61], "3671": 50, "199": 50, "0483": 50, "117": 50, "475": 50, "navstar81": 50, "navstar81_state_fl": 50, "navstar81_st": 50, "testsat_json": 50, "testsat": 50, "19": [50, 61, 64], "748768": 50, "137": [50, 53, 54, 55, 57, 59, 63], "00151280": 50, "9537": 50, "47": [50, 51, 53, 61], "2225": 50, "162": 50, "3608": 50, "sena": 50, "testsat_state_fl": 50, "testsat_st": 50, "fromgregoriand": 50, "spec_cov": 50, "125": [50, 55], "50": [50, 53, 61, 64], "1st": 50, "2459715": 50, "375": 50, "164": 50, "483": 50, "201": 50, "964": 50, "165": 50, "202": 50, "204": 50, "583": 50, "166": 50, "16": [50, 53, 61, 64], "872": 50, "207": 50, "281132": 50, "625": [50, 61], "158": 50, "281133": 50, "006": 50, "281134": 50, "157": 50, "878": 50, "thought": [51, 64], "calc_data_metr": 51, "success": 51, "bs1": [51, 54, 57, 59], "bs2": 51, "bs1_datametr": 51, "bs2_datametr": 51, "side_look": [51, 54, 57], "sidelookangl": [51, 54, 57], "access_bs1": 51, "subsequ": 51, "acf": 51, "dm_calc": 51, "out_file_dm": 51, "access_bs2": 51, "incid": 51, "zenith": 51, "503": 51, "65": 51, "37": [51, 61], "66": [51, 55], "504": 51, "09": [51, 61], "67": 51, "553": 51, "23": [51, 61, 63, 64], "92": [51, 64], "554": [51, 61], "73": [51, 64], "83": 51, "sunvector_ecieq": 52, "4th": [52, 61], "280": 52, "presenc": 52, "80fe4d2": 52, "2ff0": 52, "486d": 52, "b00e": 52, "3d74ffce0b2": 52, "257": 52, "641": 52, "848": 52, "1232": 52, "1440": 52, "1824": 52, "2031": 52, "2415": 52, "2623": 52, "offer": [53, 55, 59], "relationship": 53, "faster": 53, "extern": [53, 61], "46": [53, 54, 61], "43": [53, 61, 64], "56": [53, 61, 63], "02": [53, 61, 64], "regiona": 53, "indx": 53, "169": 53, "gridpoint": 53, "651": [53, 64], "065": 53, "48": [53, 61, 64], "254": 53, "295": 53, "335": 53, "griddatain": 53, "110": 53, "044": 53, "088": 53, "1319": 53, "regionb": 53, "metadata": [53, 55], "out_fil": 53, "griddataout": 53, "mnt": [53, 55], "hgf": [53, 55], "double_roll_onli": [53, 61], "b_rollmin": 53, "b_rollmax": 53, "instru3": [53, 55], "orbit1": [53, 55], "orbit2": [53, 55], "510": 53, "sat": [53, 55, 59], "36007964028136996": 53, "unspecifi": 54, "purpos": [54, 64], "decim": 54, "edit": 54, "spc_": 54, "_": 54, "xy": [54, 57, 63], "similarli": 54, "up": [54, 61], "nod": 54, "By": [54, 57, 63], "kilogram": 54, "meter": 54, "sp1": [54, 57, 59], "spock": 54, "bluecanyon": [54, 57, 59], "alpha": [54, 57, 59], "datar": [54, 57, 59], "40": [54, 57, 59, 61, 63], "bitsperpixel": [54, 57, 59], "power": [54, 57, 59], "numberdetectorrow": [54, 57], "numberdetectorcol": [54, 57], "6878": [54, 57, 59, 63], "145": [54, 57, 59], "saturn": [54, 57], "passiv": [54, 57, 61], "scanner": [54, 57, 61], "firesat": [54, 57], "628": [54, 57], "scantechniqu": [54, 57], "whiskbroom": [54, 57], "85": [54, 57], "256": [54, 57], "detectorwidth": [54, 57], "30e": [54, 57], "focallength": [54, 57], "operatingwavelength": [54, 57], "2e": [54, 57], "bandwidth": [54, 57], "9e": [54, 57], "quantumeff": [54, 57], "targetblackbodytemp": [54, 57], "290": [54, 57], "opticssyseff": [54, 57], "numofreadout": [54, 57], "aperturedia": [54, 57], "fnum": [54, 57], "atmoslossmodel": [54, 57], "lowtran7": [54, 57], "5219": [54, 57], "1473": [54, 57], "95": [54, 57, 64], "4201": [54, 57], "86085": [54, 57], "99712": [54, 57], "69806": [54, 57], "st": 54, "cona": 54, "31": [54, 61], "64": [54, 64], "multipl": [54, 57, 61, 63], "There": [54, 59, 63, 64], "accord": [54, 64], "temp": [54, 64], "variou": 54, "main": [54, 59], "gridn": 54, "n": [54, 64], "satn": 54, "access_instrun_modem_gridk": 54, "k": 54, "cov": 54, "datametrics_instrun_modem_gridk": 54, "gndstnn_contact": 54, "satm_to_satn_contact": 54, "out1": 54, "1bfa9331": 54, "7013": 54, "45bd": 54, "8991": 54, "de552f4837a2": 54, "2459299": 54, "1292592594": 54, "out2": 54, "sat0_to_sat1": 54, "sat0_to_sat2": 54, "sat0_to_sat3": 54, "sat0_to_sat4": 54, "sat0_to_sat5": 54, "sat0_to_sat6": 54, "sat0_to_sat7": 54, "sat1_to_sat2": 54, "sat1_to_sat3": 54, "sat1_to_sat4": 54, "sat1_to_sat5": 54, "sat1_to_sat6": 54, "sat1_to_sat7": 54, "sat2_to_sat3": 54, "sat2_to_sat4": 54, "sat2_to_sat5": 54, "sat2_to_sat6": 54, "sat2_to_sat7": 54, "sat3_to_sat4": 54, "sat3_to_sat5": 54, "sat3_to_sat6": 54, "sat3_to_sat7": 54, "sat4_to_sat5": 54, "sat4_to_sat6": 54, "sat4_to_sat7": 54, "sat5_to_sat6": 54, "sat5_to_sat7": 54, "sat6_to_sat7": 54, "gndstn0_contact": 54, "sat6": 54, "sat7": 54, "stk": [55, 61], "inaccuraci": 55, "002": 55, "39": [55, 61, 64], "kep_stat": 55, "0000000000002": 55, "0020000000000001046": 55, "119": [55, 61], "99999999999999": 55, "000000000006276": 55, "99999999999376": 55, "0000000000003": 55, "0020000000000001262": 55, "60429914109106": 55, "256106395436355": 55, "52753827588562": 55, "executor": 55, "prop_start_d": 55, "27": [55, 61, 64], "750": 55, "452774546516295": 55, "eclipt": 57, "gregorian": [57, 63], "calend": 57, "univers": 57, "elaps": 57, "fraction": 57, "part": 57, "6126": 57, "123": 57, "122235888328": 57, "1465323187573002e": 57, "06": [57, 61], "fromjuliand": 57, "750000": 57, "fromcartesianst": 57, "rvector6": 57, "rotat": [57, 63, 64], "sb": 57, "earth_centered_inerti": 57, "without": [57, 64], "spc1": [57, 61], "mar": [57, 59], "spc2": 57, "coord": [57, 59], "uuid": 57, "bd96e327": 57, "36e5": 57, "4ffb": 57, "8da6": 57, "864322621e21": 57, "consider": [58, 64], "dev": 58, "level": [58, 64], "imageri": 58, "top": 58, "nag": 58, "eo": 58, "sim": 58, "open": 58, "ieee": 58, "intern": [58, 63], "symposium": 58, "brussel": 58, "belgium": 58, "juli": [58, 61], "synonym": 58, "payload": 58, "sometim": [58, 61], "simplest": 59, "accompani": 59, "simpli": [59, 64], "jan": [59, 61], "00": [59, 61], "displai": 59, "simple_mission1": 59, "consol": 59, "example1": 59, "grid0": 59, "grid1": 59, "access_instru0_mode0_grid0": 59, "access_instru0_mode0_grid1": 59, "datametrics_instru0_mode0_grid0": 59, "datametrics_instru0_mode0_grid1": 59, "maximum": 59, "flexibl": 59, "most": [59, 64], "via": 59, "friendli": 59, "7031": 59, "step_siz": 59, "unittest": [61, 64], "special": 61, "much": [61, 64], "assert": 61, "known": 61, "literatur": 61, "previou": 61, "older": 61, "version": 61, "truth": [61, 64], "help": 61, "unintend": 61, "effect": 61, "testconstellationfactori": 61, "methodnam": 61, "testwalkerdeltaconstel": 61, "test_generate_orbits_1": 61, "partial": 61, "274": 61, "test_generate_orbits_2": 61, "angle_differ": 61, "358": 61, "testj2analyticalpropag": 61, "hook": 61, "fixtur": 61, "exercis": 61, "setupclass": 61, "test_execute_2": 61, "speed": 61, "test_execute_3": 61, "prograd": 61, "retrograd": 61, "iciti": 61, "testpropagatorfactori": 61, "testpropagatormodulefunct": 61, "test_compute_time_step": 61, "precomput": 61, "testpropagatoroutputinfo": 61, "testgrid": 61, "testgridmodulefunct": 61, "test_compute_grid_r": 61, "altitut": 61, "testgridoutputinfo": 61, "testcontactfind": 61, "test_execute_ground_stn_contact_sentinel1a_gs1": 61, "against": [61, 64], "propgat": 61, "sentinel1a": 61, "gs1": [61, 63], "groundstation1": 61, "utc": 61, "557": 61, "59": 61, "624": 61, "54459040": 61, "299": 61, "655": 61, "35573284": 61, "04": 61, "57": [61, 64], "038": 61, "18": [61, 64], "740": 61, "621": 61, "70165640": 61, "645": 61, "53": [61, 63], "040": 61, "611": 61, "39420030": 61, "313": 61, "523": 61, "591": 61, "21018058": 61, "41": [61, 64], "185": 61, "01": [61, 63], "340": 61, "560": 61, "15570710": 61, "219": 61, "914": 61, "522": 61, "69565989": 61, "251": 61, "490": 61, "13180420": 61, "334": 61, "03": 61, "476": 61, "86127324": 61, "269": 61, "00346269": 61, "971": 61, "49477208": 61, "904": 61, "08": 61, "818": 61, "559": 61, "91435135": 61, "610": 61, "587": 61, "590": 61, "97618844": 61, "052": 61, "289": 61, "23740769": 61, "417": 61, "032": 61, "61532363": 61, "test_execute_ground_stn_contact_sentinel1b_gs2": 61, "sentinel1b": 61, "gs2": [61, 63], "856": 61, "997": 61, "432": 61, "14128754": 61, "445": 61, "44": 61, "990": 61, "448": 61, "54498333": 61, "303": 61, "464": 61, "25133171": 61, "911": 61, "58959962": 61, "36": 61, "413": 61, "484": 61, "36139004": 61, "777": 61, "183": 61, "487": 61, "40635630": 61, "305": [61, 64], "485": 61, "84091989": 61, "213": [61, 64], "479": 61, "58849077": 61, "351": 61, "05": 61, "974": 61, "468": 61, "62302835": 61, "640": 61, "350": 61, "70949119": 61, "832": 61, "886": 61, "437": 61, "05351007": 61, "433": 61, "785": 61, "422": 61, "35252488": 61, "652": 61, "497": 61, "84478367": 61, "678": 61, "042": 61, "414": 61, "36446942": 61, "test_execute_intersat_contact_precomput": 61, "testeclipsefind": 61, "test_execute_sentinel1a_dawn_dusk": 61, "dawn": 61, "dust": 61, "test_execute_jaxel_precomput": 61, "testcoveragecalculatorfactori": 61, "testcoveragecalculatorfunct": 61, "test_filter_mid_interval_access": 61, "pre": 61, "testcoverageoutputinfo": 61, "testgridcoverag": 61, "test_execute_0": 61, "test_execute_1": 61, "yaw": 61, "pitch": 61, "test_execute_4": 61, "test_execute_5": 61, "test_execute_6": 61, "test_execute_7": 61, "test_execute_8": 61, "test_execute_9": 61, "conic": [61, 64], "vari": 61, "remain": [61, 64], "lag": 61, "zero": [61, 64], "w": 61, "spc4": 61, "progress": 61, "subset": 61, "bigger": 61, "sign": 61, "spc1_json": 61, "spc5": 61, "manuev": 61, "neg": 61, "union": 61, "testpointingoptionscoverag": 61, "euler": [61, 63, 64], "sequenc": [61, 63, 64], "randomli": 61, "throughout": [61, 64], "half": [61, 64], "twice": 61, "massion": 61, "testpointingoptionswithgridcoverag": 61, "test_execute_0_1": 61, "test_execute_0_2": 61, "test_execute_0_3": 61, "testdatametriccalcul": 61, "test_data": 61, "test_scenario_1": 61, "test_scenario_2": 61, "test_scenario_3": 61, "test_scenario_4": 61, "test_scenario_5": 61, "test_scenario_6": 61, "test_scenario_7": 61, "test_scenario_8": 61, "testmiss": 61, "sidelook": 61, "gird": 61, "testset": 61, "testgroundst": 61, "testorbitst": 61, "testoutputinfoutil": 61, "testspacecraft": 61, "testspacecraftbu": 61, "testutilfunct": 61, "testutilmodulefunct": 61, "2017": 63, "111": 63, "OR": 63, "caclul": 63, "whenev": 63, "squar": 63, "bracket": 63, "even": 63, "walkerdelta": 63, "idn": 63, "96": 63, "67657116": 63, "127": 63, "individu": 63, "0001": 63, "heterogn": 63, "distribut": 63, "among": [63, 64], "pay1_1": 63, "pay1_2": 63, "pay2_1": 63, "stationinfo": 63, "beyond": 63, "cane": 63, "taco": 63, "hilli": 63, "89": 63, "gndstnfilenam": 63, "gndstnfilepath": 63, "otherwis": 63, "minelev": 63, "svalbard": 63, "trollsat": 63, "72": 63, "covgrid": 63, "creat": 63, "customgridr": 63, "warn": 63, "customgridresfactor": 63, "covgridfilenam": 63, "instrumentid": 63, "nadirreffram": 63, "pntoptsfilenam": 63, "pntoptsfilepath": 63, "compulsori": 63, "whitespac": 63, "otion": 63, "strictli": 63, "sen1": 63, "popts_sen1": 63, "sen2": 63, "sen2_popt": 63, "intrins": [63, 64], "r3r2r1": 63, "euler_angle1": 63, "euler_angle2": 63, "euler_angle3": 63, "customtimestep": 63, "customtimeresfactor": 63, "core": 64, "industri": 64, "standard": 64, "although": 64, "tradit": 64, "whole": 64, "onc": 64, "difficult": 64, "tie": 64, "furthermor": 64, "close": 64, "proprietari": 64, "quantifi": 64, "predict": 64, "high": 64, "saniti": 64, "constant": 64, "futur": 64, "fail": 64, "hard": 64, "septemb": 64, "2020": 64, "master": 64, "branch": 64, "capabl": 64, "fine": 64, "tune": 64, "eq2000": 64, "limit": 64, "graviti": 64, "perturb": 64, "chang": 64, "exactli": 64, "min": 64, "max": 64, "numer": 64, "certain": 64, "unresolv": 64, "imposs": 64, "secular": 64, "biggest": 64, "caus": 64, "7000": 64, "7578": 64, "378": 64, "7865": 64, "8797": 64, "78089": 64, "277": 64, "789": 64, "170": 64, "test_gmat_propagation_orbitpropcovgrid": 64, "test_run_1": 64, "came": 64, "plot": 64, "clearli": 64, "diverg": 64, "notabl": 64, "introduc": 64, "These": 64, "examin": 64, "subject": 64, "purturb": 64, "sake": 64, "breviti": 64, "better": 64, "rest": 64, "focu": 64, "signific": 64, "becaus": 64, "scenario": 64, "test_stk_propag": 64, "test_01": 64, "explain": 64, "varieti": 64, "slight": 64, "drift": 64, "015": 64, "test_stk_propagation_orbitpropcovgrid": 64, "eight": 64, "summar": 64, "00000149": 64, "00914": 64, "00916": 64, "again": 64, "still": 64, "substanti": 64, "unknown": 64, "reason": 64, "exibit": 64, "slightli": 64, "linearli": 64, "orbitpropcov": 64, "orbitpropcovgrid": 64, "verif": 64, "modular": 64, "previous": 64, "wherev": 64, "wasn": 64, "rather": 64, "binari": 64, "timestep": 64, "allign": 64, "ecf": 64, "whereas": 64, "four": 64, "cumul": 64, "sum": 64, "averag": 64, "absolut": 64, "percent": 64, "possibli": 64, "understand": 64, "pin": 64, "down": 64, "deviat": 64, "test_stk_coverag": 64, "access_test": 64, "globe": 64, "continent": 64, "7080": 64, "rect_15_10_p3": 64, "sn3": 64, "20deg": 64, "instrins": 64, "24": 64, "test_stk_coverage_orbitpropcovgrid": 64, "classifi": 64, "onto": 64, "flat": 64, "test_propagator_j2analyticalpropagator_with_stk": 64, "forc": 64, "498": 64, "318": 64, "022": 64, "491": 64, "796": 64, "730": 64, "831": 64, "835": 64, "42": 64, "682": 64, "352": 64, "465": 64, "304": 64, "126": 64, "visual": 64, "inspect": 64, "excel": 64, "agreement": 64, "highest": 64, "analyz": 64, "synchron": 64, "u": 64, "global": 64, "polar": 64, "color": 64, "confus": 64}, "objects": {"orbitpy.constellation": [[3, 0, 1, "", "ConstellationFactory"], [4, 0, 1, "", "TrainConstellation"], [5, 0, 1, "", "WalkerDeltaConstellation"]], "orbitpy.constellation.ConstellationFactory": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "get_constellation_model"], [3, 1, 1, "", "register_constellation_model"]], "orbitpy.constellation.TrainConstellation": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_json"], [4, 1, 1, "", "generate_orbits"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_json"]], "orbitpy.constellation.WalkerDeltaConstellation": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "from_dict"], [5, 1, 1, "", "from_json"], [5, 1, 1, "", "generate_orbits"], [5, 1, 1, "", "to_dict"], [5, 1, 1, "", "to_json"]], "orbitpy.contactfinder": [[6, 0, 1, "", "ContactFinder"], [7, 0, 1, "", "ContactFinderOutputInfo"], [8, 2, 1, "", "ContactPairs"]], "orbitpy.contactfinder.ContactFinder": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "execute"], [6, 1, 1, "", "find_all_pairs"], [6, 1, 1, "", "from_dict"], [6, 1, 1, "", "from_json"], [6, 1, 1, "", "to_dict"], [6, 1, 1, "", "to_json"]], "orbitpy.contactfinder.ContactFinderOutputInfo": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "check_loose_equality"], [7, 1, 1, "", "from_dict"], [7, 1, 1, "", "from_json"], [7, 1, 1, "", "to_dict"], [7, 1, 1, "", "to_json"]], "orbitpy.coveragecalculator": [[9, 0, 1, "", "CoverageCalculatorFactory"], [10, 0, 1, "", "GridCoverage"], [11, 0, 1, "", "PointingOptionsCoverage"], [12, 0, 1, "", "PointingOptionsWithGridCoverage"], [13, 0, 1, "", "SpecularCoverage"], [14, 2, 1, "", "filter_mid_interval_access"], [15, 2, 1, "", "find_in_cov_params_list"], [16, 2, 1, "", "helper_extract_coverage_parameters_of_spacecraft"]], "orbitpy.coveragecalculator.CoverageCalculatorFactory": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_coverage_calculator"], [9, 1, 1, "", "register_coverage_calculator"]], "orbitpy.coveragecalculator.GridCoverage": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "execute"], [10, 1, 1, "", "from_dict"], [10, 1, 1, "", "from_json"], [10, 1, 1, "", "to_dict"], [10, 1, 1, "", "to_json"]], "orbitpy.coveragecalculator.PointingOptionsCoverage": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "execute"], [11, 1, 1, "", "from_dict"], [11, 1, 1, "", "from_json"], [11, 1, 1, "", "intersect_vector_sphere"], [11, 1, 1, "", "to_dict"], [11, 1, 1, "", "to_json"]], "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "execute"], [12, 1, 1, "", "from_dict"], [12, 1, 1, "", "from_json"], [12, 1, 1, "", "to_dict"], [12, 1, 1, "", "to_json"]], "orbitpy.coveragecalculator.SpecularCoverage": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "check_point_in_circle"], [13, 1, 1, "", "execute"], [13, 1, 1, "", "from_dict"], [13, 1, 1, "", "from_json"], [13, 1, 1, "", "specular_location"], [13, 1, 1, "", "to_dict"], [13, 1, 1, "", "to_json"]], "orbitpy.datametricscalculator": [[17, 2, 1, "", "AccessFileInfo"], [18, 0, 1, "", "DataMetricsCalculator"], [19, 0, 1, "", "DataMetricsOutputInfo"]], "orbitpy.datametricscalculator.DataMetricsCalculator": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "add_access_file_info"], [18, 1, 1, "", "execute"], [18, 1, 1, "", "from_dict"], [18, 1, 1, "", "from_json"], [18, 1, 1, "", "search_access_file_info"], [18, 1, 1, "", "to_dict"], [18, 1, 1, "", "to_json"]], "orbitpy.datametricscalculator.DataMetricsOutputInfo": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "check_loose_equality"], [19, 1, 1, "", "from_dict"], [19, 1, 1, "", "from_json"], [19, 1, 1, "", "to_dict"], [19, 1, 1, "", "to_json"]], "orbitpy.eclipsefinder": [[20, 0, 1, "", "EclipseFinder"], [21, 0, 1, "", "EclipseFinderOutputInfo"]], "orbitpy.eclipsefinder.EclipseFinder": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "execute"], [20, 1, 1, "", "from_dict"], [20, 1, 1, "", "from_json"], [20, 1, 1, "", "to_dict"], [20, 1, 1, "", "to_json"]], "orbitpy.eclipsefinder.EclipseFinderOutputInfo": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "check_loose_equality"], [21, 1, 1, "", "from_dict"], [21, 1, 1, "", "from_json"], [21, 1, 1, "", "to_dict"], [21, 1, 1, "", "to_json"]], "orbitpy.grid": [[22, 0, 1, "", "Grid"], [23, 0, 1, "", "GridOutputInfo"], [24, 2, 1, "", "GridPoint"], [25, 2, 1, "", "compute_grid_res"]], "orbitpy.grid.Grid": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "from_autogrid_dict"], [22, 1, 1, "", "from_customgrid_dict"], [22, 1, 1, "", "from_dict"], [22, 1, 1, "", "from_json"], [22, 1, 1, "", "get_lat_lon"], [22, 1, 1, "", "get_lat_lon_from_index"], [22, 1, 1, "", "to_dict"], [22, 1, 1, "", "to_json"], [22, 1, 1, "", "write_to_file"]], "orbitpy.grid.GridOutputInfo": [[23, 1, 1, "", "__init__"], [23, 1, 1, "", "check_loose_equality"], [23, 1, 1, "", "from_dict"], [23, 1, 1, "", "from_json"], [23, 1, 1, "", "to_dict"], [23, 1, 1, "", "to_json"]], "orbitpy.mission": [[26, 0, 1, "", "Mission"], [27, 0, 1, "", "Settings"]], "orbitpy.mission.Mission": [[26, 1, 1, "", "__init__"], [26, 1, 1, "", "add_constellation_from_dict"], [26, 1, 1, "", "add_coverage_grid_from_dict"], [26, 1, 1, "", "add_groundstation_from_dict"], [26, 1, 1, "", "add_instrument_to_spacecraft"], [26, 1, 1, "", "add_spacecraft_from_dict"], [26, 1, 1, "", "clear"], [26, 1, 1, "", "execute"], [26, 1, 1, "", "execute_archived"], [26, 1, 1, "", "execute_coverage_calculator"], [26, 1, 1, "", "execute_datametrics_calculator"], [26, 1, 1, "", "execute_eclipse_finder"], [26, 1, 1, "", "execute_groundstation_contact_finder"], [26, 1, 1, "", "execute_intersatellite_contact_finder"], [26, 1, 1, "", "execute_propagation"], [26, 1, 1, "", "from_dict"], [26, 1, 1, "", "from_json"], [26, 1, 1, "", "get_spacecraft_orbit_specs"], [26, 1, 1, "", "save_auto_grid"], [26, 1, 1, "", "to_dict"], [26, 1, 1, "", "to_json"], [26, 1, 1, "", "update_coverage_settings_from_dict"], [26, 1, 1, "", "update_duration"], [26, 1, 1, "", "update_epoch_from_dict"], [26, 1, 1, "", "update_propagator_settings"], [26, 1, 1, "", "update_settings"]], "orbitpy.mission.Settings": [[27, 1, 1, "", "__init__"], [27, 1, 1, "", "from_dict"], [27, 1, 1, "", "from_json"], [27, 1, 1, "", "to_dict"], [27, 1, 1, "", "to_json"]], "orbitpy.propagator": [[28, 0, 1, "", "J2AnalyticalPropagator"], [29, 0, 1, "", "PropagatorFactory"], [30, 0, 1, "", "PropagatorOutputInfo"], [31, 2, 1, "", "compute_time_step"]], "orbitpy.propagator.J2AnalyticalPropagator": [[28, 1, 1, "", "__init__"], [28, 1, 1, "", "execute"], [28, 1, 1, "", "from_dict"], [28, 1, 1, "", "from_json"], [28, 1, 1, "", "to_dict"], [28, 1, 1, "", "to_json"]], "orbitpy.propagator.PropagatorFactory": [[29, 1, 1, "", "__init__"], [29, 1, 1, "", "get_propagator"], [29, 1, 1, "", "register_propagator"]], "orbitpy.propagator.PropagatorOutputInfo": [[30, 1, 1, "", "__init__"], [30, 1, 1, "", "check_loose_equality"], [30, 1, 1, "", "from_dict"], [30, 1, 1, "", "from_json"], [30, 1, 1, "", "to_dict"], [30, 1, 1, "", "to_json"]], "orbitpy.util": [[32, 0, 1, "", "DateType"], [33, 0, 1, "", "GroundStation"], [34, 0, 1, "", "OrbitState"], [35, 0, 1, "", "OutputInfoUtility"], [36, 0, 1, "", "Spacecraft"], [37, 0, 1, "", "SpacecraftBus"], [38, 0, 1, "", "StateType"], [39, 2, 1, "", "add_to_list"], [40, 2, 1, "", "dictionary_list_to_object_list"], [41, 2, 1, "", "extract_auxillary_info_from_state_file"], [42, 2, 1, "", "helper_extract_spacecraft_params"], [43, 2, 1, "", "initialize_object_list"], [44, 2, 1, "", "object_list_to_dictionary_list"]], "orbitpy.util.DateType": [[32, 3, 1, "", "GREGORIAN_UT1"], [32, 3, 1, "", "JULIAN_DATE_UT1"]], "orbitpy.util.GroundStation": [[33, 1, 1, "", "__init__"], [33, 1, 1, "", "from_dict"], [33, 1, 1, "", "from_json"], [33, 1, 1, "", "get_coords"], [33, 1, 1, "", "to_dict"], [33, 1, 1, "", "to_json"]], "orbitpy.util.OrbitState": [[34, 1, 1, "", "__init__"], [34, 1, 1, "", "date_from_dict"], [34, 1, 1, "", "date_to_dict"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_json"], [34, 1, 1, "", "get_cartesian_earth_centered_inertial_state"], [34, 1, 1, "", "get_julian_date"], [34, 1, 1, "", "get_keplerian_earth_centered_inertial_state"], [34, 1, 1, "", "state_from_dict"], [34, 1, 1, "", "state_to_dict"], [34, 1, 1, "", "to_dict"], [34, 1, 1, "", "to_json"]], "orbitpy.util.OutputInfoUtility": [[35, 1, 1, "", "__init__"], [35, 1, 1, "", "delete_output_info_object_in_list"], [35, 1, 1, "", "locate_output_info_object_in_list"]], "orbitpy.util.Spacecraft": [[36, 1, 1, "", "__init__"], [36, 1, 1, "", "add_instrument"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_json"], [36, 1, 1, "", "get_id"], [36, 1, 1, "", "get_instrument"], [36, 1, 1, "", "to_dict"], [36, 1, 1, "", "to_json"]], "orbitpy.util.SpacecraftBus": [[37, 1, 1, "", "__init__"], [37, 1, 1, "", "from_dict"], [37, 1, 1, "", "from_json"], [37, 1, 1, "", "to_dict"], [37, 1, 1, "", "to_json"]], "orbitpy.util.StateType": [[38, 3, 1, "", "CARTESIAN_EARTH_CENTERED_INERTIAL"], [38, 3, 1, "", "CARTESIAN_EARTH_FIXED"], [38, 3, 1, "", "KEPLERIAN_EARTH_CENTERED_INERTIAL"]], "": [[61, 4, 0, "-", "test_constellation"], [61, 4, 0, "-", "test_contactfinder"], [61, 4, 0, "-", "test_coveragecalculator"], [61, 4, 0, "-", "test_coveragecalculator_gridcoverage"], [61, 4, 0, "-", "test_coveragecalculator_pointingoptionscoverage"], [61, 4, 0, "-", "test_coveragecalculator_pointingoptionswithgridcoverage"], [61, 4, 0, "-", "test_datametricscalculator"], [61, 4, 0, "-", "test_eclipsefinder"], [61, 4, 0, "-", "test_grid"], [61, 4, 0, "-", "test_mission"], [61, 4, 0, "-", "test_propagator"], [61, 4, 0, "-", "test_util"]], "test_constellation": [[61, 0, 1, "", "TestConstellationFactory"], [61, 0, 1, "", "TestWalkerDeltaConstellation"], [61, 2, 1, "", "angle_difference"]], "test_constellation.TestWalkerDeltaConstellation": [[61, 1, 1, "", "test_generate_orbits_1"], [61, 1, 1, "", "test_generate_orbits_2"]], "test_contactfinder": [[61, 0, 1, "", "TestContactFinder"]], "test_contactfinder.TestContactFinder": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_ground_stn_contact_Sentinel1A_gs1"], [61, 1, 1, "", "test_execute_ground_stn_contact_Sentinel1B_gs2"], [61, 1, 1, "", "test_execute_intersat_contact_precomputed"]], "test_coveragecalculator": [[61, 0, 1, "", "TestCoverageCalculatorFactory"], [61, 0, 1, "", "TestCoverageCalculatorFunctions"], [61, 0, 1, "", "TestCoverageOutputInfo"]], "test_coveragecalculator.TestCoverageCalculatorFunctions": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_filter_mid_interval_access"]], "test_coveragecalculator_gridcoverage": [[61, 0, 1, "", "TestGridCoverage"]], "test_coveragecalculator_gridcoverage.TestGridCoverage": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_0"], [61, 1, 1, "", "test_execute_1"], [61, 1, 1, "", "test_execute_2"], [61, 1, 1, "", "test_execute_3"], [61, 1, 1, "", "test_execute_4"], [61, 1, 1, "", "test_execute_5"], [61, 1, 1, "", "test_execute_6"], [61, 1, 1, "", "test_execute_7"], [61, 1, 1, "", "test_execute_8"], [61, 1, 1, "", "test_execute_9"]], "test_coveragecalculator_pointingoptionscoverage": [[61, 0, 1, "", "TestPointingOptionsCoverage"]], "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_0"], [61, 1, 1, "", "test_execute_1"], [61, 1, 1, "", "test_execute_2"]], "test_coveragecalculator_pointingoptionswithgridcoverage": [[61, 0, 1, "", "TestPointingOptionsWithGridCoverage"]], "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_0"], [61, 1, 1, "", "test_execute_1"], [61, 1, 1, "", "test_execute_3"]], "test_datametricscalculator": [[61, 0, 1, "", "TestDataMetricCalculator"]], "test_datametricscalculator.TestDataMetricCalculator": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_0_1"], [61, 1, 1, "", "test_execute_0_2"], [61, 1, 1, "", "test_execute_0_3"]], "test_eclipsefinder": [[61, 0, 1, "", "TestEclipseFinder"]], "test_eclipsefinder.TestEclipseFinder": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_Sentinel1A_dawn_dusk"], [61, 1, 1, "", "test_execute_jaxel_precomputed"]], "test_grid": [[61, 0, 1, "", "TestGrid"], [61, 0, 1, "", "TestGridModuleFunction"], [61, 0, 1, "", "TestGridOutputInfo"]], "test_grid.TestGrid": [[61, 1, 1, "", "setUpClass"]], "test_grid.TestGridModuleFunction": [[61, 1, 1, "", "test_compute_grid_res"]], "test_mission": [[61, 0, 1, "", "TestMission"], [61, 0, 1, "", "TestSettings"]], "test_mission.TestMission": [[61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_scenario_1"], [61, 1, 1, "", "test_scenario_2"], [61, 1, 1, "", "test_scenario_3"], [61, 1, 1, "", "test_scenario_4"], [61, 1, 1, "", "test_scenario_5"], [61, 1, 1, "", "test_scenario_6"], [61, 1, 1, "", "test_scenario_7"]], "test_propagator": [[61, 0, 1, "", "TestJ2AnalyticalPropagator"], [61, 0, 1, "", "TestPropagatorFactory"], [61, 0, 1, "", "TestPropagatorModuleFunction"], [61, 0, 1, "", "TestPropagatorOutputInfo"]], "test_propagator.TestJ2AnalyticalPropagator": [[61, 1, 1, "", "setUp"], [61, 1, 1, "", "setUpClass"], [61, 1, 1, "", "test_execute_2"], [61, 1, 1, "", "test_execute_3"]], "test_propagator.TestPropagatorModuleFunction": [[61, 1, 1, "", "test_compute_time_step"]], "test_util": [[61, 0, 1, "", "TestGroundStation"], [61, 0, 1, "", "TestOrbitState"], [61, 0, 1, "", "TestOutputInfoUtility"], [61, 0, 1, "", "TestSpacecraft"], [61, 0, 1, "", "TestSpacecraftBus"], [61, 0, 1, "", "TestUtilFunctions"], [61, 0, 1, "", "TestUtilModuleFunction"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"]}, "titleterms": {"api": [0, 48, 49, 50, 51, 52, 53, 54, 55, 57], "refer": [0, 48, 52], "todo": [0, 13, 18, 47, 49, 50, 53, 55, 61], "develop": 1, "exampl": [2, 22, 48, 49, 50, 51, 52, 53, 54, 55, 57, 63], "simpl": 2, "mission": [2, 26, 54, 59], "1": 2, "planet": 2, "skysat": 2, "sar": 2, "constel": [2, 48, 54, 63], "landsat": 2, "8": 2, "seahawk": 2, "hypothet": 2, "2": 2, "constellationfactori": 3, "trainconstel": 4, "walkerdeltaconstel": 5, "contactfind": [6, 49], "contact": [6, 49], "file": [6, 20, 22, 49, 50, 51, 52, 53, 55, 59, 63], "interv": [6, 20, 49, 52], "data": [6, 10, 11, 12, 13, 18, 20, 22, 28, 49, 50, 51, 52, 55, 63], "format": [6, 20, 49, 50, 51, 52, 53, 55], "detail": [6, 20, 49, 52], "contactfinderoutputinfo": 7, "contactpair": 8, "coveragecalculatorfactori": 9, "gridcoverag": [10, 50], "coverag": [10, 11, 12, 13, 22, 50, 63, 64], "descript": [10, 11, 12, 13, 18, 28, 48, 49, 50, 51, 52, 53, 54, 55, 57, 63], "pointingoptionscoverag": [11, 50], "pointingoptionswithgridcoverag": [12, 50], "specularcoverag": [13, 50], "filter_mid_interval_access": 14, "find_in_cov_params_list": 15, "helper_extract_coverage_parameters_of_spacecraft": 16, "accessfileinfo": 17, "datametricscalcul": [18, 51], "observ": [18, 51], "metric": [18, 51], "datametricsoutputinfo": 19, "eclipsefind": [20, 52], "eclips": [20, 52], "eclipsefinderoutputinfo": 21, "grid": [22, 50, 53, 54, 63], "gridoutputinfo": 23, "gridpoint": 24, "compute_grid_r": 25, "set": [27, 54], "j2analyticalpropag": 28, "cartesian_earth_centered_inerti": [28, 55], "state": [28, 55], "keplerian_earth_centered_inerti": [28, 55], "propagatorfactori": 29, "propagatoroutputinfo": 30, "compute_time_step": 31, "datetyp": [32, 57], "groundstat": [33, 54, 57, 63], "orbitst": [34, 54, 57], "outputinfoutil": 35, "spacecraft": [36, 54, 57], "spacecraftbu": [37, 54, 57], "statetyp": [38, 57], "add_to_list": 39, "dictionary_list_to_object_list": 40, "extract_auxillary_info_from_state_fil": 41, "helper_extract_spacecraft_param": 42, "initialize_object_list": 43, "object_list_to_dictionary_list": 44, "welcom": 45, "orbitpi": [45, 50, 51, 57], "": 45, "document": 45, "content": 45, "question": 45, "credit": 45, "acknowledg": 45, "indic": 45, "tabl": 45, "instal": 46, "miscellan": 47, "integr": 47, "other": 47, "modul": [47, 48, 49, 51, 52, 53, 54, 55, 57, 61], "orbit": [48, 49, 52, 53, 54, 55, 56], "finder": [49, 52], "output": [49, 50, 51, 52, 54, 55], "coveragecalcul": 50, "calcul": [50, 51], "execut": [50, 51, 59], "function": [50, 51], "point": 50, "option": 50, "WITH": 50, "correct": 50, "access": 50, "pure": 50, "side": 50, "look": 50, "instrument": 50, "narrow": 50, "along": 50, "track": 50, "fov": 50, "specular": 50, "input": [53, 63, 64], "specif": [54, 59], "date": 54, "json": [54, 59, 63], "object": [54, 63], "autogrid": 54, "type": 54, "custom": [54, 59], "propag": [54, 55, 63, 64], "sensorpixelproject": 56, "sensor": 56, "pixel": 56, "project": 56, "util": 57, "orient": 57, "packag": 58, "overview": 58, "glossari": 58, "term": 58, "us": 58, "run": 59, "write": 59, "python": 59, "script": 59, "softwar": 60, "test": [61, 64], "how": 61, "strategi": 61, "test_constel": 61, "test_propag": 61, "test_grid": 61, "test_contactfind": 61, "test_eclipsefind": 61, "test_coveragecalcul": 61, "test_coveragecalculator_gridcoverag": 61, "test_coveragecalculator_pointingoptionscoverag": 61, "test_coveragecalculator_pointingoptionswithgridcoverag": 61, "test_datametricscalcul": 61, "test_miss": 61, "test_util": 61, "user": [62, 63], "guid": 62, "paramet": 63, "expect": 63, "satellit": 63, "ground": 63, "station": 63, "header": 63, "lat": 63, "deg": 63, "lon": 63, "pointingopt": 63, "valid": 64, "about": 64, "gmat": 64, "model": 64, "analysi": 64, "stk": 64, "result": 64, "combin": 64}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Todo": [[0, "id2"], [13, "id1"], [18, "id1"], [47, "id1"], [49, "id1"], [50, "id3"], [53, "id1"], [55, "id1"], [61, "id1"]], "Development": [[1, "development"]], "Examples": [[2, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [57, "examples"]], "Simple Mission 1": [[2, "simple-mission-1"]], "Planet SkySat": [[2, "planet-skysat"]], "SAR Constellation": [[2, "sar-constellation"]], "Landsat-8, SeaHawk-1, (hypothetical) SeaHawk-2": [[2, "landsat-8-seahawk-1-hypothetical-seahawk-2"]], "ConstellationFactory": [[3, "constellationfactory"]], "TrainConstellation": [[4, "trainconstellation"]], "WalkerDeltaConstellation": [[5, "walkerdeltaconstellation"]], "ContactFinder": [[6, "contactfinder"]], "Contact file INTERVAL data format": [[6, "id1"], [49, "id2"]], "Contact file DETAIL data format": [[6, "id2"], [49, "id3"]], "ContactFinderOutputInfo": [[7, "contactfinderoutputinfo"]], "ContactPairs": [[8, "contactpairs"]], "CoverageCalculatorFactory": [[9, "coveragecalculatorfactory"]], "GridCoverage": [[10, "gridcoverage"]], "Coverage data description": [[10, "id1"], [11, "id1"], [12, "id1"], [13, "id2"], [13, "id3"], [50, "id5"], [50, "id6"], [50, "id7"], [50, "id8"], [50, "id9"]], "PointingOptionsCoverage": [[11, "pointingoptionscoverage"]], "PointingOptionsWithGridCoverage": [[12, "pointingoptionswithgridcoverage"]], "SpecularCoverage": [[13, "specularcoverage"]], "filter_mid_interval_access": [[14, "filter-mid-interval-access"]], "find_in_cov_params_list": [[15, "find-in-cov-params-list"]], "helper_extract_coverage_parameters_of_spacecraft": [[16, "helper-extract-coverage-parameters-of-spacecraft"]], "AccessFileInfo": [[17, "accessfileinfo"]], "DataMetricsCalculator": [[18, "datametricscalculator"]], "Observation data metrics description": [[18, "id2"], [51, "id1"]], "DataMetricsOutputInfo": [[19, "datametricsoutputinfo"]], "EclipseFinder": [[20, "eclipsefinder"]], "Eclipse file INTERVAL data format": [[20, "id1"], [52, "id1"]], "Eclipse file DETAIL data format": [[20, "id2"], [52, "id2"]], "EclipseFinderOutputInfo": [[21, "eclipsefinderoutputinfo"]], "Grid": [[22, "grid"]], "Example of the coverage grid data file.": [[22, "id1"]], "GridOutputInfo": [[23, "gridoutputinfo"]], "GridPoint": [[24, "gridpoint"]], "compute_grid_res": [[25, "compute-grid-res"]], "Mission": [[26, "mission"]], "Settings": [[27, "settings"]], "J2AnalyticalPropagator": [[28, "j2analyticalpropagator"]], "CARTESIAN_EARTH_CENTERED_INERTIAL state data description": [[28, "id1"], [55, "id2"]], "KEPLERIAN_EARTH_CENTERED_INERTIAL state data description": [[28, "id2"], [55, "id3"]], "PropagatorFactory": [[29, "propagatorfactory"]], "PropagatorOutputInfo": [[30, "propagatoroutputinfo"]], "compute_time_step": [[31, "compute-time-step"]], "DateType": [[32, "datetype"], [57, "datetype"]], "GroundStation": [[33, "groundstation"], [57, "groundstation"]], "OrbitState": [[34, "orbitstate"], [57, "orbitstate"]], "OutputInfoUtility": [[35, "outputinfoutility"]], "Spacecraft": [[36, "spacecraft"], [57, "spacecraft"]], "SpacecraftBus": [[37, "spacecraftbus"], [57, "spacecraftbus"]], "StateType": [[38, "statetype"], [57, "statetype"]], "add_to_list": [[39, "add-to-list"]], "dictionary_list_to_object_list": [[40, "dictionary-list-to-object-list"]], "extract_auxillary_info_from_state_file": [[41, "extract-auxillary-info-from-state-file"]], "helper_extract_spacecraft_params": [[42, "helper-extract-spacecraft-params"]], "initialize_object_list": [[43, "initialize-object-list"]], "object_list_to_dictionary_list": [[44, "object-list-to-dictionary-list"]], "Welcome to OrbitPy\u2019s documentation!": [[45, "welcome-to-orbitpy-s-documentation"]], "Contents": [[45, "contents"]], "Questions?": [[45, "questions"]], "Credits and Acknowledgments": [[45, "credits-and-acknowledgments"]], "Indices and tables": [[45, "indices-and-tables"]], "Installation": [[46, "installation"]], "Miscellaneous": [[47, "miscellaneous"]], "Integration to other modules": [[47, "id4"]], "orbit.constellation \u2014 Constellation Module": [[48, "orbit-constellation-constellation-module"]], "Description": [[48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [53, "description"], [54, "description"], [55, "description"], [57, "description"]], "References": [[48, "references"], [52, "references"]], "API": [[48, "api"], [49, "api"], [50, "api"], [51, "api"], [52, "api"], [53, "api"], [54, "api"], [55, "api"], [57, "api"]], "orbit.contactfinder \u2014 Contact Finder Module": [[49, "orbit-contactfinder-contact-finder-module"]], "Output data file format": [[49, "output-data-file-format"], [50, "output-data-file-format"], [50, "pointing-options-coverage-output-file-format"], [50, "id2"], [50, "specular-coverage-output-file-format"], [51, "output-data-file-format"], [52, "output-data-file-format"], [55, "output-data-file-format"]], "orbitpy.coveragecalculator \u2014 Coverage Calculator": [[50, "orbitpy-coveragecalculator-coverage-calculator"]], "GRID COVERAGE": [[50, "grid-coverage"]], "GridCoverage.execute function": [[50, "gridcoverage-execute-function"]], "POINTING OPTIONS COVERAGE": [[50, "pointing-options-coverage"]], "PointingOptionsCoverage.execute function": [[50, "pointingoptionscoverage-execute-function"]], "POINTING OPTIONS WITH GRID COVERAGE": [[50, "pointing-options-with-grid-coverage"]], "PointingOptionsWithGridCoverage.execute function": [[50, "pointingoptionswithgridcoverage-execute-function"]], "Correction of access files for purely side-looking instruments with narrow along-track FOV": [[50, "correction-of-access-files-for-purely-side-looking-instruments-with-narrow-along-track-fov"]], "SPECULAR COVERAGE": [[50, "specular-coverage"]], "SpecularCoverage.execute function": [[50, "specularcoverage-execute-function"]], "orbitpy.datametricscalculator \u2014 Data Metrics Calculator Module": [[51, "orbitpy-datametricscalculator-data-metrics-calculator-module"]], "DataMetricsCalculator.execute function": [[51, "datametricscalculator-execute-function"]], "orbit.eclipsefinder \u2014 Eclipse Finder Module": [[52, "orbit-eclipsefinder-eclipse-finder-module"]], "Example": [[52, "example"], [57, "example"], [57, "id1"], [57, "id2"]], "orbit.grid \u2014 Grid Module": [[53, "orbit-grid-grid-module"]], "Input grid file format": [[53, "input-grid-file-format"]], "orbit.mission \u2014 Mission Module": [[54, "orbit-mission-mission-module"]], "Mission specifications description": [[54, "id10"]], "date json object": [[54, "date-json-object"]], "constellation json object": [[54, "constellation-json-object"]], "spacecraft json object": [[54, "spacecraft-json-object"]], "orbitState json object": [[54, "orbitstate-json-object"]], "spacecraftBus json object": [[54, "spacecraftbus-json-object"]], "groundstation json object": [[54, "groundstation-json-object"]], "grid json object": [[54, "grid-json-object"]], "autogrid grid-type": [[54, "autogrid-grid-type"]], "custom grid-type": [[54, "custom-grid-type"]], "propagator json object": [[54, "propagator-json-object"]], "settings json object": [[54, "settings-json-object"]], "Output": [[54, "output"]], "orbit.propagator \u2014 Propagator Module": [[55, "orbit-propagator-propagator-module"]], "orbit.sensorpixelprojection \u2014 Sensor Pixel Projection": [[56, "orbit-sensorpixelprojection-sensor-pixel-projection"]], "orbitpy.util \u2014 Util Module": [[57, "orbitpy-util-util-module"]], "Orientation": [[57, "orientation"]], "Package Overview": [[58, "package-overview"]], "Glossary of terms used in the package": [[58, "glossary-of-terms-used-in-the-package"]], "Run": [[59, "run"]], "Execution with a JSON mission specifications file": [[59, "execution-with-a-json-mission-specifications-file"]], "Execution by writing custom python script": [[59, "execution-by-writing-custom-python-script"]], "Software": [[60, "software"]], "Tests": [[61, "tests"]], "How to": [[61, "how-to"]], "Testing strategies": [[61, "testing-strategies"]], "Test Modules": [[61, "test-modules"]], "test_constellation": [[61, "module-test_constellation"]], "test_propagator": [[61, "module-test_propagator"]], "test_grid": [[61, "module-test_grid"]], "test_contactfinder": [[61, "module-test_contactfinder"]], "test_eclipsefinder": [[61, "module-test_eclipsefinder"]], "test_coveragecalculator": [[61, "module-test_coveragecalculator"]], "test_coveragecalculator_gridcoverage": [[61, "module-test_coveragecalculator_gridcoverage"]], "test_coveragecalculator_pointingoptionscoverage": [[61, "module-test_coveragecalculator_pointingoptionscoverage"]], "test_coveragecalculator_pointingoptionswithgridcoverage": [[61, "module-test_coveragecalculator_pointingoptionswithgridcoverage"]], "test_datametricscalculator": [[61, "module-test_datametricscalculator"]], "test_mission": [[61, "module-test_mission"]], "test_util": [[61, "module-test_util"]], "User Guide": [[62, "user-guide"]], "User JSON Input Description": [[63, "user-json-input-description"]], "Input parameter description": [[63, "id3"]], "constellation JSON object": [[63, "constellation-json-object"]], "Expected parameters": [[63, "id4"], [63, "id5"], [63, "id6"], [63, "id8"], [63, "id9"], [63, "id11"], [63, "id12"]], "satellite JSON object": [[63, "satellite-json-object"]], "groundStations JSON object": [[63, "groundstations-json-object"]], "Example of the ground station data file.": [[63, "id7"]], "grid JSON object": [[63, "grid-json-object"]], "Example of the coverage grid data file.\n:header:lat[deg],lon[deg]": [[63, "id10"]], "pointingOptions JSON object": [[63, "pointingoptions-json-object"]], "propagator JSON object": [[63, "propagator-json-object"]], "Validation": [[64, "validation"]], "About": [[64, "about"]], "GMAT Tests": [[64, "gmat-tests"]], "GMAT Propagation Tests: Model": [[64, "gmat-propagation-tests-model"]], "GMAT Propagation Tests: Input": [[64, "gmat-propagation-tests-input"]], "GMAT Propagation Tests: Analysis": [[64, "gmat-propagation-tests-analysis"]], "STK Tests": [[64, "stk-tests"]], "STK Propagation Tests: Model": [[64, "stk-propagation-tests-model"]], "STK Propagation Tests: Inputs": [[64, "stk-propagation-tests-inputs"]], "STK Propagation Tests: Analysis": [[64, "stk-propagation-tests-analysis"]], "Test Results": [[64, "id2"], [64, "id4"]], "STK Coverage Tests: Model": [[64, "stk-coverage-tests-model"]], "STK Coverage Tests: Inputs": [[64, "stk-coverage-tests-inputs"]], "Test Combinations": [[64, "id3"]], "STK Coverage Tests: Analysis": [[64, "stk-coverage-tests-analysis"]]}, "indexentries": {"constellationfactory (class in orbitpy.constellation)": [[3, "orbitpy.constellation.ConstellationFactory"]], "__init__() (orbitpy.constellation.constellationfactory method)": [[3, "orbitpy.constellation.ConstellationFactory.__init__"]], "get_constellation_model() (orbitpy.constellation.constellationfactory method)": [[3, "orbitpy.constellation.ConstellationFactory.get_constellation_model"]], "register_constellation_model() (orbitpy.constellation.constellationfactory method)": [[3, "orbitpy.constellation.ConstellationFactory.register_constellation_model"]], "trainconstellation (class in orbitpy.constellation)": [[4, "orbitpy.constellation.TrainConstellation"]], "__init__() (orbitpy.constellation.trainconstellation method)": [[4, "orbitpy.constellation.TrainConstellation.__init__"]], "from_dict() (orbitpy.constellation.trainconstellation static method)": [[4, "orbitpy.constellation.TrainConstellation.from_dict"]], "from_json() (orbitpy.constellation.trainconstellation class method)": [[4, "orbitpy.constellation.TrainConstellation.from_json"]], "generate_orbits() (orbitpy.constellation.trainconstellation method)": [[4, "orbitpy.constellation.TrainConstellation.generate_orbits"]], "to_dict() (orbitpy.constellation.trainconstellation method)": [[4, "orbitpy.constellation.TrainConstellation.to_dict"]], "to_json() (orbitpy.constellation.trainconstellation method)": [[4, "orbitpy.constellation.TrainConstellation.to_json"]], "walkerdeltaconstellation (class in orbitpy.constellation)": [[5, "orbitpy.constellation.WalkerDeltaConstellation"]], "__init__() (orbitpy.constellation.walkerdeltaconstellation method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.__init__"]], "from_dict() (orbitpy.constellation.walkerdeltaconstellation static method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.from_dict"]], "from_json() (orbitpy.constellation.walkerdeltaconstellation class method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.from_json"]], "generate_orbits() (orbitpy.constellation.walkerdeltaconstellation method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.generate_orbits"]], "to_dict() (orbitpy.constellation.walkerdeltaconstellation method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.to_dict"]], "to_json() (orbitpy.constellation.walkerdeltaconstellation method)": [[5, "orbitpy.constellation.WalkerDeltaConstellation.to_json"]], "contactfinder (class in orbitpy.contactfinder)": [[6, "orbitpy.contactfinder.ContactFinder"]], "__init__() (orbitpy.contactfinder.contactfinder method)": [[6, "orbitpy.contactfinder.ContactFinder.__init__"]], "execute() (orbitpy.contactfinder.contactfinder static method)": [[6, "orbitpy.contactfinder.ContactFinder.execute"]], "find_all_pairs() (orbitpy.contactfinder.contactfinder static method)": [[6, "orbitpy.contactfinder.ContactFinder.find_all_pairs"]], "from_dict() (orbitpy.contactfinder.contactfinder static method)": [[6, "orbitpy.contactfinder.ContactFinder.from_dict"]], "from_json() (orbitpy.contactfinder.contactfinder class method)": [[6, "orbitpy.contactfinder.ContactFinder.from_json"]], "to_dict() (orbitpy.contactfinder.contactfinder method)": [[6, "orbitpy.contactfinder.ContactFinder.to_dict"]], "to_json() (orbitpy.contactfinder.contactfinder method)": [[6, "orbitpy.contactfinder.ContactFinder.to_json"]], "contactfinderoutputinfo (class in orbitpy.contactfinder)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo"]], "__init__() (orbitpy.contactfinder.contactfinderoutputinfo method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.__init__"]], "check_loose_equality() (orbitpy.contactfinder.contactfinderoutputinfo method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.check_loose_equality"]], "from_dict() (orbitpy.contactfinder.contactfinderoutputinfo static method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.from_dict"]], "from_json() (orbitpy.contactfinder.contactfinderoutputinfo class method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.from_json"]], "to_dict() (orbitpy.contactfinder.contactfinderoutputinfo method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.to_dict"]], "to_json() (orbitpy.contactfinder.contactfinderoutputinfo method)": [[7, "orbitpy.contactfinder.ContactFinderOutputInfo.to_json"]], "contactpairs() (in module orbitpy.contactfinder)": [[8, "orbitpy.contactfinder.ContactPairs"]], "coveragecalculatorfactory (class in orbitpy.coveragecalculator)": [[9, "orbitpy.coveragecalculator.CoverageCalculatorFactory"]], "__init__() (orbitpy.coveragecalculator.coveragecalculatorfactory method)": [[9, "orbitpy.coveragecalculator.CoverageCalculatorFactory.__init__"]], "get_coverage_calculator() (orbitpy.coveragecalculator.coveragecalculatorfactory method)": [[9, "orbitpy.coveragecalculator.CoverageCalculatorFactory.get_coverage_calculator"]], "register_coverage_calculator() (orbitpy.coveragecalculator.coveragecalculatorfactory method)": [[9, "orbitpy.coveragecalculator.CoverageCalculatorFactory.register_coverage_calculator"]], "gridcoverage (class in orbitpy.coveragecalculator)": [[10, "orbitpy.coveragecalculator.GridCoverage"]], "__init__() (orbitpy.coveragecalculator.gridcoverage method)": [[10, "orbitpy.coveragecalculator.GridCoverage.__init__"]], "execute() (orbitpy.coveragecalculator.gridcoverage method)": [[10, "orbitpy.coveragecalculator.GridCoverage.execute"]], "from_dict() (orbitpy.coveragecalculator.gridcoverage static method)": [[10, "orbitpy.coveragecalculator.GridCoverage.from_dict"]], "from_json() (orbitpy.coveragecalculator.gridcoverage class method)": [[10, "orbitpy.coveragecalculator.GridCoverage.from_json"]], "to_dict() (orbitpy.coveragecalculator.gridcoverage method)": [[10, "orbitpy.coveragecalculator.GridCoverage.to_dict"]], "to_json() (orbitpy.coveragecalculator.gridcoverage method)": [[10, "orbitpy.coveragecalculator.GridCoverage.to_json"]], "pointingoptionscoverage (class in orbitpy.coveragecalculator)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage"]], "__init__() (orbitpy.coveragecalculator.pointingoptionscoverage method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.__init__"]], "execute() (orbitpy.coveragecalculator.pointingoptionscoverage method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.execute"]], "from_dict() (orbitpy.coveragecalculator.pointingoptionscoverage static method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.from_dict"]], "from_json() (orbitpy.coveragecalculator.pointingoptionscoverage class method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.from_json"]], "intersect_vector_sphere() (orbitpy.coveragecalculator.pointingoptionscoverage static method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.intersect_vector_sphere"]], "to_dict() (orbitpy.coveragecalculator.pointingoptionscoverage method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.to_dict"]], "to_json() (orbitpy.coveragecalculator.pointingoptionscoverage method)": [[11, "orbitpy.coveragecalculator.PointingOptionsCoverage.to_json"]], "pointingoptionswithgridcoverage (class in orbitpy.coveragecalculator)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage"]], "__init__() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.__init__"]], "execute() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.execute"]], "from_dict() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage static method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.from_dict"]], "from_json() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage class method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.from_json"]], "to_dict() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.to_dict"]], "to_json() (orbitpy.coveragecalculator.pointingoptionswithgridcoverage method)": [[12, "orbitpy.coveragecalculator.PointingOptionsWithGridCoverage.to_json"]], "specularcoverage (class in orbitpy.coveragecalculator)": [[13, "orbitpy.coveragecalculator.SpecularCoverage"]], "__init__() (orbitpy.coveragecalculator.specularcoverage method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.__init__"]], "check_point_in_circle() (orbitpy.coveragecalculator.specularcoverage static method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.check_point_in_circle"]], "execute() (orbitpy.coveragecalculator.specularcoverage method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.execute"]], "from_dict() (orbitpy.coveragecalculator.specularcoverage static method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.from_dict"]], "from_json() (orbitpy.coveragecalculator.specularcoverage class method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.from_json"]], "specular_location() (orbitpy.coveragecalculator.specularcoverage static method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.specular_location"]], "to_dict() (orbitpy.coveragecalculator.specularcoverage method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.to_dict"]], "to_json() (orbitpy.coveragecalculator.specularcoverage method)": [[13, "orbitpy.coveragecalculator.SpecularCoverage.to_json"]], "filter_mid_interval_access() (in module orbitpy.coveragecalculator)": [[14, "orbitpy.coveragecalculator.filter_mid_interval_access"]], "find_in_cov_params_list() (in module orbitpy.coveragecalculator)": [[15, "orbitpy.coveragecalculator.find_in_cov_params_list"]], "helper_extract_coverage_parameters_of_spacecraft() (in module orbitpy.coveragecalculator)": [[16, "orbitpy.coveragecalculator.helper_extract_coverage_parameters_of_spacecraft"]], "accessfileinfo() (in module orbitpy.datametricscalculator)": [[17, "orbitpy.datametricscalculator.AccessFileInfo"]], "datametricscalculator (class in orbitpy.datametricscalculator)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator"]], "__init__() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.__init__"]], "add_access_file_info() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.add_access_file_info"]], "execute() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.execute"]], "from_dict() (orbitpy.datametricscalculator.datametricscalculator static method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.from_dict"]], "from_json() (orbitpy.datametricscalculator.datametricscalculator class method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.from_json"]], "search_access_file_info() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.search_access_file_info"]], "to_dict() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.to_dict"]], "to_json() (orbitpy.datametricscalculator.datametricscalculator method)": [[18, "orbitpy.datametricscalculator.DataMetricsCalculator.to_json"]], "datametricsoutputinfo (class in orbitpy.datametricscalculator)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo"]], "__init__() (orbitpy.datametricscalculator.datametricsoutputinfo method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.__init__"]], "check_loose_equality() (orbitpy.datametricscalculator.datametricsoutputinfo method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.check_loose_equality"]], "from_dict() (orbitpy.datametricscalculator.datametricsoutputinfo static method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.from_dict"]], "from_json() (orbitpy.datametricscalculator.datametricsoutputinfo class method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.from_json"]], "to_dict() (orbitpy.datametricscalculator.datametricsoutputinfo method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.to_dict"]], "to_json() (orbitpy.datametricscalculator.datametricsoutputinfo method)": [[19, "orbitpy.datametricscalculator.DataMetricsOutputInfo.to_json"]], "eclipsefinder (class in orbitpy.eclipsefinder)": [[20, "orbitpy.eclipsefinder.EclipseFinder"]], "__init__() (orbitpy.eclipsefinder.eclipsefinder method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.__init__"]], "execute() (orbitpy.eclipsefinder.eclipsefinder static method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.execute"]], "from_dict() (orbitpy.eclipsefinder.eclipsefinder static method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.from_dict"]], "from_json() (orbitpy.eclipsefinder.eclipsefinder class method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.from_json"]], "to_dict() (orbitpy.eclipsefinder.eclipsefinder method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.to_dict"]], "to_json() (orbitpy.eclipsefinder.eclipsefinder method)": [[20, "orbitpy.eclipsefinder.EclipseFinder.to_json"]], "eclipsefinderoutputinfo (class in orbitpy.eclipsefinder)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo"]], "__init__() (orbitpy.eclipsefinder.eclipsefinderoutputinfo method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.__init__"]], "check_loose_equality() (orbitpy.eclipsefinder.eclipsefinderoutputinfo method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.check_loose_equality"]], "from_dict() (orbitpy.eclipsefinder.eclipsefinderoutputinfo static method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.from_dict"]], "from_json() (orbitpy.eclipsefinder.eclipsefinderoutputinfo class method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.from_json"]], "to_dict() (orbitpy.eclipsefinder.eclipsefinderoutputinfo method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.to_dict"]], "to_json() (orbitpy.eclipsefinder.eclipsefinderoutputinfo method)": [[21, "orbitpy.eclipsefinder.EclipseFinderOutputInfo.to_json"]], "grid (class in orbitpy.grid)": [[22, "orbitpy.grid.Grid"]], "__init__() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.__init__"]], "from_autogrid_dict() (orbitpy.grid.grid static method)": [[22, "orbitpy.grid.Grid.from_autogrid_dict"]], "from_customgrid_dict() (orbitpy.grid.grid static method)": [[22, "orbitpy.grid.Grid.from_customgrid_dict"]], "from_dict() (orbitpy.grid.grid static method)": [[22, "orbitpy.grid.Grid.from_dict"]], "from_json() (orbitpy.grid.grid class method)": [[22, "orbitpy.grid.Grid.from_json"]], "get_lat_lon() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.get_lat_lon"]], "get_lat_lon_from_index() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.get_lat_lon_from_index"]], "to_dict() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.to_dict"]], "to_json() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.to_json"]], "write_to_file() (orbitpy.grid.grid method)": [[22, "orbitpy.grid.Grid.write_to_file"]], "gridoutputinfo (class in orbitpy.grid)": [[23, "orbitpy.grid.GridOutputInfo"]], "__init__() (orbitpy.grid.gridoutputinfo method)": [[23, "orbitpy.grid.GridOutputInfo.__init__"]], "check_loose_equality() (orbitpy.grid.gridoutputinfo method)": [[23, "orbitpy.grid.GridOutputInfo.check_loose_equality"]], "from_dict() (orbitpy.grid.gridoutputinfo static method)": [[23, "orbitpy.grid.GridOutputInfo.from_dict"]], "from_json() (orbitpy.grid.gridoutputinfo class method)": [[23, "orbitpy.grid.GridOutputInfo.from_json"]], "to_dict() (orbitpy.grid.gridoutputinfo method)": [[23, "orbitpy.grid.GridOutputInfo.to_dict"]], "to_json() (orbitpy.grid.gridoutputinfo method)": [[23, "orbitpy.grid.GridOutputInfo.to_json"]], "gridpoint() (in module orbitpy.grid)": [[24, "orbitpy.grid.GridPoint"]], "compute_grid_res() (in module orbitpy.grid)": [[25, "orbitpy.grid.compute_grid_res"]], "mission (class in orbitpy.mission)": [[26, "orbitpy.mission.Mission"]], "__init__() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.__init__"]], "add_constellation_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.add_constellation_from_dict"]], "add_coverage_grid_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.add_coverage_grid_from_dict"]], "add_groundstation_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.add_groundstation_from_dict"]], "add_instrument_to_spacecraft() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.add_instrument_to_spacecraft"]], "add_spacecraft_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.add_spacecraft_from_dict"]], "clear() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.clear"]], "execute() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute"]], "execute_archived() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_archived"]], "execute_coverage_calculator() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_coverage_calculator"]], "execute_datametrics_calculator() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_datametrics_calculator"]], "execute_eclipse_finder() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_eclipse_finder"]], "execute_groundstation_contact_finder() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_groundstation_contact_finder"]], "execute_intersatellite_contact_finder() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_intersatellite_contact_finder"]], "execute_propagation() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.execute_propagation"]], "from_dict() (orbitpy.mission.mission static method)": [[26, "orbitpy.mission.Mission.from_dict"]], "from_json() (orbitpy.mission.mission class method)": [[26, "orbitpy.mission.Mission.from_json"]], "get_spacecraft_orbit_specs() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.get_spacecraft_orbit_specs"]], "save_auto_grid() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.save_auto_grid"]], "to_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.to_dict"]], "to_json() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.to_json"]], "update_coverage_settings_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.update_coverage_settings_from_dict"]], "update_duration() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.update_duration"]], "update_epoch_from_dict() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.update_epoch_from_dict"]], "update_propagator_settings() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.update_propagator_settings"]], "update_settings() (orbitpy.mission.mission method)": [[26, "orbitpy.mission.Mission.update_settings"]], "settings (class in orbitpy.mission)": [[27, "orbitpy.mission.Settings"]], "__init__() (orbitpy.mission.settings method)": [[27, "orbitpy.mission.Settings.__init__"]], "from_dict() (orbitpy.mission.settings static method)": [[27, "orbitpy.mission.Settings.from_dict"]], "from_json() (orbitpy.mission.settings class method)": [[27, "orbitpy.mission.Settings.from_json"]], "to_dict() (orbitpy.mission.settings method)": [[27, "orbitpy.mission.Settings.to_dict"]], "to_json() (orbitpy.mission.settings method)": [[27, "orbitpy.mission.Settings.to_json"]], "j2analyticalpropagator (class in orbitpy.propagator)": [[28, "orbitpy.propagator.J2AnalyticalPropagator"]], "__init__() (orbitpy.propagator.j2analyticalpropagator method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.__init__"]], "execute() (orbitpy.propagator.j2analyticalpropagator method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.execute"]], "from_dict() (orbitpy.propagator.j2analyticalpropagator static method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.from_dict"]], "from_json() (orbitpy.propagator.j2analyticalpropagator class method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.from_json"]], "to_dict() (orbitpy.propagator.j2analyticalpropagator method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.to_dict"]], "to_json() (orbitpy.propagator.j2analyticalpropagator method)": [[28, "orbitpy.propagator.J2AnalyticalPropagator.to_json"]], "propagatorfactory (class in orbitpy.propagator)": [[29, "orbitpy.propagator.PropagatorFactory"]], "__init__() (orbitpy.propagator.propagatorfactory method)": [[29, "orbitpy.propagator.PropagatorFactory.__init__"]], "get_propagator() (orbitpy.propagator.propagatorfactory method)": [[29, "orbitpy.propagator.PropagatorFactory.get_propagator"]], "register_propagator() (orbitpy.propagator.propagatorfactory method)": [[29, "orbitpy.propagator.PropagatorFactory.register_propagator"]], "propagatoroutputinfo (class in orbitpy.propagator)": [[30, "orbitpy.propagator.PropagatorOutputInfo"]], "__init__() (orbitpy.propagator.propagatoroutputinfo method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.__init__"]], "check_loose_equality() (orbitpy.propagator.propagatoroutputinfo method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.check_loose_equality"]], "from_dict() (orbitpy.propagator.propagatoroutputinfo static method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.from_dict"]], "from_json() (orbitpy.propagator.propagatoroutputinfo class method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.from_json"]], "to_dict() (orbitpy.propagator.propagatoroutputinfo method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.to_dict"]], "to_json() (orbitpy.propagator.propagatoroutputinfo method)": [[30, "orbitpy.propagator.PropagatorOutputInfo.to_json"]], "compute_time_step() (in module orbitpy.propagator)": [[31, "orbitpy.propagator.compute_time_step"]], "datetype (class in orbitpy.util)": [[32, "orbitpy.util.DateType"]], "gregorian_ut1 (orbitpy.util.datetype attribute)": [[32, "orbitpy.util.DateType.GREGORIAN_UT1"]], "julian_date_ut1 (orbitpy.util.datetype attribute)": [[32, "orbitpy.util.DateType.JULIAN_DATE_UT1"]], "groundstation (class in orbitpy.util)": [[33, "orbitpy.util.GroundStation"]], "__init__() (orbitpy.util.groundstation method)": [[33, "orbitpy.util.GroundStation.__init__"]], "from_dict() (orbitpy.util.groundstation static method)": [[33, "orbitpy.util.GroundStation.from_dict"]], "from_json() (orbitpy.util.groundstation class method)": [[33, "orbitpy.util.GroundStation.from_json"]], "get_coords() (orbitpy.util.groundstation method)": [[33, "orbitpy.util.GroundStation.get_coords"]], "to_dict() (orbitpy.util.groundstation method)": [[33, "orbitpy.util.GroundStation.to_dict"]], "to_json() (orbitpy.util.groundstation method)": [[33, "orbitpy.util.GroundStation.to_json"]], "orbitstate (class in orbitpy.util)": [[34, "orbitpy.util.OrbitState"]], "__init__() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.__init__"]], "date_from_dict() (orbitpy.util.orbitstate static method)": [[34, "orbitpy.util.OrbitState.date_from_dict"]], "date_to_dict() (orbitpy.util.orbitstate static method)": [[34, "orbitpy.util.OrbitState.date_to_dict"]], "from_dict() (orbitpy.util.orbitstate static method)": [[34, "orbitpy.util.OrbitState.from_dict"]], "from_json() (orbitpy.util.orbitstate class method)": [[34, "orbitpy.util.OrbitState.from_json"]], "get_cartesian_earth_centered_inertial_state() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.get_cartesian_earth_centered_inertial_state"]], "get_julian_date() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.get_julian_date"]], "get_keplerian_earth_centered_inertial_state() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.get_keplerian_earth_centered_inertial_state"]], "state_from_dict() (orbitpy.util.orbitstate static method)": [[34, "orbitpy.util.OrbitState.state_from_dict"]], "state_to_dict() (orbitpy.util.orbitstate static method)": [[34, "orbitpy.util.OrbitState.state_to_dict"]], "to_dict() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.to_dict"]], "to_json() (orbitpy.util.orbitstate method)": [[34, "orbitpy.util.OrbitState.to_json"]], "outputinfoutility (class in orbitpy.util)": [[35, "orbitpy.util.OutputInfoUtility"]], "__init__() (orbitpy.util.outputinfoutility method)": [[35, "orbitpy.util.OutputInfoUtility.__init__"]], "delete_output_info_object_in_list() (orbitpy.util.outputinfoutility static method)": [[35, "orbitpy.util.OutputInfoUtility.delete_output_info_object_in_list"]], "locate_output_info_object_in_list() (orbitpy.util.outputinfoutility static method)": [[35, "orbitpy.util.OutputInfoUtility.locate_output_info_object_in_list"]], "spacecraft (class in orbitpy.util)": [[36, "orbitpy.util.Spacecraft"]], "__init__() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.__init__"]], "add_instrument() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.add_instrument"]], "from_dict() (orbitpy.util.spacecraft static method)": [[36, "orbitpy.util.Spacecraft.from_dict"]], "from_json() (orbitpy.util.spacecraft class method)": [[36, "orbitpy.util.Spacecraft.from_json"]], "get_id() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.get_id"]], "get_instrument() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.get_instrument"]], "to_dict() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.to_dict"]], "to_json() (orbitpy.util.spacecraft method)": [[36, "orbitpy.util.Spacecraft.to_json"]], "spacecraftbus (class in orbitpy.util)": [[37, "orbitpy.util.SpacecraftBus"]], "__init__() (orbitpy.util.spacecraftbus method)": [[37, "orbitpy.util.SpacecraftBus.__init__"]], "from_dict() (orbitpy.util.spacecraftbus static method)": [[37, "orbitpy.util.SpacecraftBus.from_dict"]], "from_json() (orbitpy.util.spacecraftbus class method)": [[37, "orbitpy.util.SpacecraftBus.from_json"]], "to_dict() (orbitpy.util.spacecraftbus method)": [[37, "orbitpy.util.SpacecraftBus.to_dict"]], "to_json() (orbitpy.util.spacecraftbus method)": [[37, "orbitpy.util.SpacecraftBus.to_json"]], "cartesian_earth_centered_inertial (orbitpy.util.statetype attribute)": [[38, "orbitpy.util.StateType.CARTESIAN_EARTH_CENTERED_INERTIAL"]], "cartesian_earth_fixed (orbitpy.util.statetype attribute)": [[38, "orbitpy.util.StateType.CARTESIAN_EARTH_FIXED"]], "keplerian_earth_centered_inertial (orbitpy.util.statetype attribute)": [[38, "orbitpy.util.StateType.KEPLERIAN_EARTH_CENTERED_INERTIAL"]], "statetype (class in orbitpy.util)": [[38, "orbitpy.util.StateType"]], "add_to_list() (in module orbitpy.util)": [[39, "orbitpy.util.add_to_list"]], "dictionary_list_to_object_list() (in module orbitpy.util)": [[40, "orbitpy.util.dictionary_list_to_object_list"]], "extract_auxillary_info_from_state_file() (in module orbitpy.util)": [[41, "orbitpy.util.extract_auxillary_info_from_state_file"]], "helper_extract_spacecraft_params() (in module orbitpy.util)": [[42, "orbitpy.util.helper_extract_spacecraft_params"]], "initialize_object_list() (in module orbitpy.util)": [[43, "orbitpy.util.initialize_object_list"]], "object_list_to_dictionary_list() (in module orbitpy.util)": [[44, "orbitpy.util.object_list_to_dictionary_list"]], "testconstellationfactory (class in test_constellation)": [[61, "test_constellation.TestConstellationFactory"]], "testcontactfinder (class in test_contactfinder)": [[61, "test_contactfinder.TestContactFinder"]], "testcoveragecalculatorfactory (class in test_coveragecalculator)": [[61, "test_coveragecalculator.TestCoverageCalculatorFactory"]], "testcoveragecalculatorfunctions (class in test_coveragecalculator)": [[61, "test_coveragecalculator.TestCoverageCalculatorFunctions"]], "testcoverageoutputinfo (class in test_coveragecalculator)": [[61, "test_coveragecalculator.TestCoverageOutputInfo"]], "testdatametriccalculator (class in test_datametricscalculator)": [[61, "test_datametricscalculator.TestDataMetricCalculator"]], "testeclipsefinder (class in test_eclipsefinder)": [[61, "test_eclipsefinder.TestEclipseFinder"]], "testgrid (class in test_grid)": [[61, "test_grid.TestGrid"]], "testgridcoverage (class in test_coveragecalculator_gridcoverage)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage"]], "testgridmodulefunction (class in test_grid)": [[61, "test_grid.TestGridModuleFunction"]], "testgridoutputinfo (class in test_grid)": [[61, "test_grid.TestGridOutputInfo"]], "testgroundstation (class in test_util)": [[61, "test_util.TestGroundStation"]], "testj2analyticalpropagator (class in test_propagator)": [[61, "test_propagator.TestJ2AnalyticalPropagator"]], "testmission (class in test_mission)": [[61, "test_mission.TestMission"]], "testorbitstate (class in test_util)": [[61, "test_util.TestOrbitState"]], "testoutputinfoutility (class in test_util)": [[61, "test_util.TestOutputInfoUtility"]], "testpointingoptionscoverage (class in test_coveragecalculator_pointingoptionscoverage)": [[61, "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage"]], "testpointingoptionswithgridcoverage (class in test_coveragecalculator_pointingoptionswithgridcoverage)": [[61, "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage"]], "testpropagatorfactory (class in test_propagator)": [[61, "test_propagator.TestPropagatorFactory"]], "testpropagatormodulefunction (class in test_propagator)": [[61, "test_propagator.TestPropagatorModuleFunction"]], "testpropagatoroutputinfo (class in test_propagator)": [[61, "test_propagator.TestPropagatorOutputInfo"]], "testsettings (class in test_mission)": [[61, "test_mission.TestSettings"]], "testspacecraft (class in test_util)": [[61, "test_util.TestSpacecraft"]], "testspacecraftbus (class in test_util)": [[61, "test_util.TestSpacecraftBus"]], "testutilfunctions (class in test_util)": [[61, "test_util.TestUtilFunctions"]], "testutilmodulefunction (class in test_util)": [[61, "test_util.TestUtilModuleFunction"]], "testwalkerdeltaconstellation (class in test_constellation)": [[61, "test_constellation.TestWalkerDeltaConstellation"]], "angle_difference() (in module test_constellation)": [[61, "test_constellation.angle_difference"]], "module": [[61, "module-test_constellation"], [61, "module-test_contactfinder"], [61, "module-test_coveragecalculator"], [61, "module-test_coveragecalculator_gridcoverage"], [61, "module-test_coveragecalculator_pointingoptionscoverage"], [61, "module-test_coveragecalculator_pointingoptionswithgridcoverage"], [61, "module-test_datametricscalculator"], [61, "module-test_eclipsefinder"], [61, "module-test_grid"], [61, "module-test_mission"], [61, "module-test_propagator"], [61, "module-test_util"]], "setup() (test_propagator.testj2analyticalpropagator method)": [[61, "test_propagator.TestJ2AnalyticalPropagator.setUp"]], "setupclass() (test_contactfinder.testcontactfinder class method)": [[61, "test_contactfinder.TestContactFinder.setUpClass"]], "setupclass() (test_coveragecalculator.testcoveragecalculatorfunctions class method)": [[61, "test_coveragecalculator.TestCoverageCalculatorFunctions.setUpClass"]], "setupclass() (test_coveragecalculator_gridcoverage.testgridcoverage class method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.setUpClass"]], "setupclass() (test_coveragecalculator_pointingoptionscoverage.testpointingoptionscoverage class method)": [[61, "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage.setUpClass"]], "setupclass() (test_coveragecalculator_pointingoptionswithgridcoverage.testpointingoptionswithgridcoverage class method)": [[61, "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage.setUpClass"]], "setupclass() (test_datametricscalculator.testdatametriccalculator class method)": [[61, "test_datametricscalculator.TestDataMetricCalculator.setUpClass"]], "setupclass() (test_eclipsefinder.testeclipsefinder class method)": [[61, "test_eclipsefinder.TestEclipseFinder.setUpClass"]], "setupclass() (test_grid.testgrid class method)": [[61, "test_grid.TestGrid.setUpClass"]], "setupclass() (test_mission.testmission class method)": [[61, "test_mission.TestMission.setUpClass"]], "setupclass() (test_propagator.testj2analyticalpropagator class method)": [[61, "test_propagator.TestJ2AnalyticalPropagator.setUpClass"]], "test_compute_grid_res() (test_grid.testgridmodulefunction method)": [[61, "test_grid.TestGridModuleFunction.test_compute_grid_res"]], "test_compute_time_step() (test_propagator.testpropagatormodulefunction method)": [[61, "test_propagator.TestPropagatorModuleFunction.test_compute_time_step"]], "test_constellation": [[61, "module-test_constellation"]], "test_contactfinder": [[61, "module-test_contactfinder"]], "test_coveragecalculator": [[61, "module-test_coveragecalculator"]], "test_coveragecalculator_gridcoverage": [[61, "module-test_coveragecalculator_gridcoverage"]], "test_coveragecalculator_pointingoptionscoverage": [[61, "module-test_coveragecalculator_pointingoptionscoverage"]], "test_coveragecalculator_pointingoptionswithgridcoverage": [[61, "module-test_coveragecalculator_pointingoptionswithgridcoverage"]], "test_datametricscalculator": [[61, "module-test_datametricscalculator"]], "test_eclipsefinder": [[61, "module-test_eclipsefinder"]], "test_execute_0() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_0"]], "test_execute_0() (test_coveragecalculator_pointingoptionscoverage.testpointingoptionscoverage method)": [[61, "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage.test_execute_0"]], "test_execute_0() (test_coveragecalculator_pointingoptionswithgridcoverage.testpointingoptionswithgridcoverage method)": [[61, "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage.test_execute_0"]], "test_execute_0_1() (test_datametricscalculator.testdatametriccalculator method)": [[61, "test_datametricscalculator.TestDataMetricCalculator.test_execute_0_1"]], "test_execute_0_2() (test_datametricscalculator.testdatametriccalculator method)": [[61, "test_datametricscalculator.TestDataMetricCalculator.test_execute_0_2"]], "test_execute_0_3() (test_datametricscalculator.testdatametriccalculator method)": [[61, "test_datametricscalculator.TestDataMetricCalculator.test_execute_0_3"]], "test_execute_1() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_1"]], "test_execute_1() (test_coveragecalculator_pointingoptionscoverage.testpointingoptionscoverage method)": [[61, "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage.test_execute_1"]], "test_execute_1() (test_coveragecalculator_pointingoptionswithgridcoverage.testpointingoptionswithgridcoverage method)": [[61, "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage.test_execute_1"]], "test_execute_2() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_2"]], "test_execute_2() (test_coveragecalculator_pointingoptionscoverage.testpointingoptionscoverage method)": [[61, "test_coveragecalculator_pointingoptionscoverage.TestPointingOptionsCoverage.test_execute_2"]], "test_execute_2() (test_propagator.testj2analyticalpropagator method)": [[61, "test_propagator.TestJ2AnalyticalPropagator.test_execute_2"]], "test_execute_3() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_3"]], "test_execute_3() (test_coveragecalculator_pointingoptionswithgridcoverage.testpointingoptionswithgridcoverage method)": [[61, "test_coveragecalculator_pointingoptionswithgridcoverage.TestPointingOptionsWithGridCoverage.test_execute_3"]], "test_execute_3() (test_propagator.testj2analyticalpropagator method)": [[61, "test_propagator.TestJ2AnalyticalPropagator.test_execute_3"]], "test_execute_4() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_4"]], "test_execute_5() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_5"]], "test_execute_6() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_6"]], "test_execute_7() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_7"]], "test_execute_8() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_8"]], "test_execute_9() (test_coveragecalculator_gridcoverage.testgridcoverage method)": [[61, "test_coveragecalculator_gridcoverage.TestGridCoverage.test_execute_9"]], "test_execute_sentinel1a_dawn_dusk() (test_eclipsefinder.testeclipsefinder method)": [[61, "test_eclipsefinder.TestEclipseFinder.test_execute_Sentinel1A_dawn_dusk"]], "test_execute_ground_stn_contact_sentinel1a_gs1() (test_contactfinder.testcontactfinder method)": [[61, "test_contactfinder.TestContactFinder.test_execute_ground_stn_contact_Sentinel1A_gs1"]], "test_execute_ground_stn_contact_sentinel1b_gs2() (test_contactfinder.testcontactfinder method)": [[61, "test_contactfinder.TestContactFinder.test_execute_ground_stn_contact_Sentinel1B_gs2"]], "test_execute_intersat_contact_precomputed() (test_contactfinder.testcontactfinder method)": [[61, "test_contactfinder.TestContactFinder.test_execute_intersat_contact_precomputed"]], "test_execute_jaxel_precomputed() (test_eclipsefinder.testeclipsefinder method)": [[61, "test_eclipsefinder.TestEclipseFinder.test_execute_jaxel_precomputed"]], "test_filter_mid_interval_access() (test_coveragecalculator.testcoveragecalculatorfunctions method)": [[61, "test_coveragecalculator.TestCoverageCalculatorFunctions.test_filter_mid_interval_access"]], "test_generate_orbits_1() (test_constellation.testwalkerdeltaconstellation method)": [[61, "test_constellation.TestWalkerDeltaConstellation.test_generate_orbits_1"]], "test_generate_orbits_2() (test_constellation.testwalkerdeltaconstellation method)": [[61, "test_constellation.TestWalkerDeltaConstellation.test_generate_orbits_2"]], "test_grid": [[61, "module-test_grid"]], "test_mission": [[61, "module-test_mission"]], "test_propagator": [[61, "module-test_propagator"]], "test_scenario_1() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_1"]], "test_scenario_2() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_2"]], "test_scenario_3() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_3"]], "test_scenario_4() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_4"]], "test_scenario_5() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_5"]], "test_scenario_6() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_6"]], "test_scenario_7() (test_mission.testmission method)": [[61, "test_mission.TestMission.test_scenario_7"]], "test_util": [[61, "module-test_util"]]}})